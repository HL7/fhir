<div xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/1999/xhtml ../../schema/fhir-xhtml.xsd" xmlns="http://www.w3.org/1999/xhtml">

<!-- insert xhtml content here -->
<a name="notes"></a>
<h2>Notes</h2>
<ul>
<li>Multiple Organizations or Practitioners may provide services at a Location. These references are not kept in Location, but can be found
in the models for <a href="organization.html">Organization</a> and <a href="practitioner.html">Practitioner</a> instead.</li>
<li>Locations may range from whole buildings to cabinets; it is possible to relate smaller Locations to their containing bigger Location 
using the Location.partOf element.</li>
<li>Location.position is expressed using the same syntax, datum and reference system as used in Google Earth's KML files,
see <a href="http://www.opengeospatial.org/standards/kml">Google/OGS's KML</a>.</li>
</ul>

<a name="loc-mode"></a>
<h3>Location Mode</h3>
<p>The Location.mode element can be used to indicate whether a Location resource represents a specific (potentially identifiable) Location ('instance'), 
or a class of Locations ('kind'). Especially Resources capturing orders, resource scheduling, plans and definitions may refer to Locations in 'kind' mode. 
For these domains, it is often not necessary to refer to a specific Location, but rather to a class of Locations. An example of this is found in planning, 
where we need to allocate an "isolation room" for a patient, or need to dispatch "an ambulance" at a certain time. In these cases it is not important 
to identify exactly which isolation room or ambulance is allocated, it is sufficient to just indicate a 'kind' of Location.</p>
<p>Note that 'kind' should not be used to represent Locations where an actual instance of a Location was involved, but by identifying missing information.
E.g. when a patient arrived 'by ambulance', but it is not known by which ambulance, this should be represented using a Location in 'instance' mode with a
missing identifier, not a Location of 'kind' ambulance.</p>
<p>
Some of Location's data elements are only relevant when mode is 'instance' and should not be used when mode is 'kind':<br/>
	<i>(however this information could still be included if was relevant, such as when it is a generic item, 
    but not globally generic, e.g. a Burgers Medical Centre ambulance)</i>
</p>
<ul>
<li>Location.identifier</li>
<li>Location.telecom</li>
<li>Location.address</li>
<li>Location.position</li>
<li>Location.status</li>
<li>Location.managingOrganization</li>
</ul>

<a name="example"></a>
	<h2>Example Location Hierarchy</h2>
	<p>
		An example location hierarchy should help give some guidance as to one example
		of how a location hierarchy could look within a fictitious Hospital.<br/>
		<i>(The nesting here would be the "part-of" structure of the location)</i>
	</p>
	<pre>
Hospital A Building C (instance)
    East Wing (instance)
        Level 1 (instance)
            Reception (instance)
            Nurses Station EM-ns1 (instance)
                Medication Cupboard A (instance)
            Room 1 (instance)
                Room 1a (instance) - space in room separatable via a curtain
                    Bed 1a (instance) - always in this room
                Room 1b (instance)
                    Trolley 43 (instance) - moves about
                Room 1d (instance)
                    Trolley 19 (instance) - moves about
                Room 2 (instance)
                    ...
            Theatre EM-TA (instance)
            Coridor (generic)
        Level 2 (instance)
            Reception (instance)
                ...
            Nurses Station EM-ns1 (instance)
                Medication Cupboard A (instance)
            Coridor (generic)
Mobile Services (kind)
    Ambulance (kind)
        Ambulance AMB1 (instance)
        Ambulance AMB2 (instance)
	</pre>
	<p>
		<i>Note: Wards/departments are not part of this structure - these would form part of the Organizational Hierarchy.</i>
	</p>
  
<a name="positional"></a>
    <h3>Positional Searching</h3>
    <p>
        Searching for locations often require that a facility is within a specified distance of a specified point.
        For example, to locate healthcare facilities within 11.2 kms of a client's home, or the current geo-coded
        position of a practitioner travelling between patients (read from a mobile phone or device).
    </p>
<pre>
 GET [base]/Location?near=-83.694810|42.256500|11.20|km...
</pre>
    <p>
        The distance and distance unit parameter components are optional, if the units are missing, kms are to be assumed.
        If the distance parameter component is missing, then the server may choose its own interpretation
        of what near enough is to be included in the search results.
    </p>
    <p>
        Note: The STU3 version of this functionality did not support the multiple 
        separator <code> , </code> or chaining. The update to this format now supports both of these use cases.<br/>
        (And the near-distance was deprecated as a result of this change too)
    </p>
    <p>
        The distance between the location and the provided point is often used as one of the 
        determining factors for selection of the location. So this value is included in the results.<br/>
        However the value cannot be inside the Location resource as it is different depending on the
        point of reference in the search. So the distance between is included in the search section
        of the bundle entry. Where multiple near positions are included, the distance to the closest 
        point provided may be included.
    </p>
<pre>
&lt;entry&gt; 
    &lt;resource&gt;
        &lt;Location&gt;
            &lt;!-- location details --&gt;
        &lt;/Location&gt;
    &lt;/resource&gt;
    &lt;search&gt;
        &lt;extension url=&quot;http://hl7.org/fhir/StructureDefinition/location-distance&quot;&gt;
            &lt;valueDistance &gt;
                &lt;!-- The distance that this location resource is from the provided point in the query --&gt;
                &lt;value value=&quot;10.5&quot;/&gt;
                &lt;unit value=&quot;km&quot;/&gt;
            &lt;/valueDistance&gt;
        &lt;/extension&gt;
    &lt;/search&gt;
&lt;/entry&gt; 
</pre>
    <p>
        Note: When sorting by the <b>near</b> search parameter the results can be considered an ordered set, 
		even if the implementation does not provide calculated distances to the point provided. 
		Given the variety of possible implementations, this ordering might not be dependable. 
		If no bounding distance is provided via the search parameter, this can be considered as an ordered set of closest matches (up to an implied or explicit count).
    </p>
    <p>
        If the expectation is that the response is ordered by near, then near MUST be provided as a search parameter in the request as well. 
		A Bad Request will be returned if sorting by near is requested without the near search parameter.<br/>
		For example:
    </p>	
<pre>
 GET [base]/Location?near=-83.694810|42.256500|11.20|km&amp;_sortby=near
</pre>	
</div>

<?xml version="1.0" encoding="UTF-8"?>

<CodeSystem xmlns="http://hl7.org/fhir">
  <id value="map-transform"/>
  <meta>
    <profile value="http://hl7.org/fhir/StructureDefinition/shareablecodesystem"/>
  </meta>
  <extension url="http://hl7.org/fhir/StructureDefinition/structuredefinition-wg">
    <valueCode value="fhir"/>
  </extension>
  <extension url="http://hl7.org/fhir/StructureDefinition/structuredefinition-standards-status">
    <valueCode value="trial-use"/>
  </extension>
  <extension url="http://hl7.org/fhir/StructureDefinition/structuredefinition-fmm">
    <valueInteger value="2"/>
  </extension>
  <url value="http://hl7.org/fhir/map-transform"/>
  <identifier>
    <system value="urn:ietf:rfc:3986"/>
    <value value="urn:oid:2.16.840.1.113883.4.642.1.682"/>
  </identifier>
  <version value="5.0.0-cibuild"/>
  <name value="StructureMapTransform"/>
  <title value="StructureMapTransform"/>
  <status value="draft"/>
  <experimental value="false"/>
  <date value="2021-01-05T10:01:24+11:00"/>
  <publisher value="HL7 (FHIR Project)"/>
  <contact>
    <telecom>
      <system value="url"/>
      <value value="http://hl7.org/fhir"/>
    </telecom>
    <telecom>
      <system value="email"/>
      <value value="fhir@lists.hl7.org"/>
    </telecom>
  </contact>
  <description value="How data is copied/created."/>
  <caseSensitive value="true"/>
  <valueSet value="http://hl7.org/fhir/ValueSet/map-transform"/>
  <content value="complete"/>
  <concept>
    <code value="create"/>
    <display value="create"/>
    <definition value="create(type : string) - type is passed through to the application on the standard API, and must be known by it."/>
  </concept>
  <concept>
    <code value="copy"/>
    <display value="copy"/>
    <definition value="copy(source)."/>
  </concept>
  <concept>
    <code value="truncate"/>
    <display value="truncate"/>
    <definition value="truncate(source, length) - source must be stringy type."/>
  </concept>
  <concept>
    <code value="escape"/>
    <display value="escape"/>
    <definition value="escape(source, fmt1, fmt2) - change source from one kind of escaping to another (plain, java, xml, json). note that this is for when the string itself is escaped."/>
  </concept>
  <concept>
    <code value="cast"/>
    <display value="cast"/>
    <definition value="cast(source, type?) - case source from one type to another. target type can be left as implicit if there is one and only one target type known."/>
  </concept>
  <concept>
    <code value="append"/>
    <display value="append"/>
    <definition value="append(source...) - source is element or string."/>
  </concept>
  <concept>
    <code value="translate"/>
    <display value="translate"/>
    <definition value="translate(source, uri_of_map) - use the translate operation."/>
  </concept>
  <concept>
    <code value="reference"/>
    <display value="reference"/>
    <definition value="reference(source : object) - return a string that references the provided tree properly."/>
  </concept>
  <concept>
    <code value="dateOp"/>
    <display value="dateOp"/>
    <definition value="Perform a date operation. *Parameters to be documented*."/>
  </concept>
  <concept>
    <code value="uuid"/>
    <display value="uuid"/>
    <definition value="Generate a random UUID (in lowercase). No Parameters."/>
  </concept>
  <concept>
    <code value="pointer"/>
    <display value="pointer"/>
    <definition value="Return the appropriate string to put in a reference that refers to the resource provided as a parameter."/>
  </concept>
  <concept>
    <code value="evaluate"/>
    <display value="evaluate"/>
    <definition value="Execute the supplied FHIRPath expression and use the value returned by that."/>
  </concept>
  <concept>
    <code value="cc"/>
    <display value="cc"/>
    <definition value="Create a CodeableConcept. Parameters = (text) or (system. Code[, display])."/>
  </concept>
  <concept>
    <code value="c"/>
    <display value="c"/>
    <definition value="Create a Coding. Parameters = (system. Code[, display])."/>
  </concept>
  <concept>
    <code value="qty"/>
    <display value="qty"/>
    <definition value="Create a quantity. Parameters = (text) or (value, unit, [system, code]) where text is the natural representation e.g. [comparator]value[space]unit."/>
  </concept>
  <concept>
    <code value="id"/>
    <display value="id"/>
    <definition value="Create an identifier. Parameters = (system, value[, type]) where type is a code from the identifier type value set."/>
  </concept>
  <concept>
    <code value="cp"/>
    <display value="cp"/>
    <definition value="Create a contact details. Parameters = (value) or (system, value). If no system is provided, the system should be inferred from the content of the value."/>
  </concept>
</CodeSystem>
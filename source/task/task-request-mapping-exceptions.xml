<mappingExceptions pattern="Request" resource="Task" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../tools/schema/mappingExceptions.xsd">
    <!--For information on the contents of this file and how to properly update it, see https://confluence.hl7.org/display/FHIR/Mapping+to+Patterns.-->
    <divergentElement patternPath="Request.identifier" resourcePath="Task.identifier">
        <summary _pattern="true" _resource="false" reason="Unknown"/>
        <shortUnmatched reason="Unknown">
            <_pattern value="Business Identifier for task"/>
            <resource value="Task Instance Identifier"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="Business identifiers assigned to this task by the author and/or other systems.  These identifiers remain constant as the resource is updated and propagates from server to server."/>
            <resource value="The business identifier for this task."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="The identifier.type element is used to distinguish between the identifiers assigned by the requester/placer and the performer/filler.&#10;&#10;Note: This is a business identifier, not a resource identifier (see [discussion](resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number."/>
            <resource value=""/>
        </commentsUnmatched>
        <requirementsUnmatched reason="Unknown">
            <_pattern value="Allows identification of the task as it is known by various participating systems and in a way that remains consistent across servers."/>
            <resource value=""/>
        </requirementsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.basedOn" resourcePath="Task.basedOn">
        <missingTypes _pattern="Reference(Request)" reason="Unknown"/>
        <extraTypes _resource="Reference(Resource)" reason="Unknown"/>
        <shortUnmatched reason="Unknown">
            <_pattern value="Fulfills plan, proposal or order"/>
            <resource value="Request fulfilled by this task"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="A higher-level request resource (i.e. a plan, proposal or order) that is fulfilled in whole or in part by this task.  Authorization from the 'basedOn' request flows through to the referencing task."/>
            <resource value="BasedOn refers to a higher-level authorization that triggered the creation of the task.  It references a &quot;request&quot; resource such as a ServiceRequest, MedicationRequest, CarePlan, etc. which is distinct from the &quot;request&quot; resource the task is seeking to fulfill.  This latter resource is referenced by focus.  For example, based on a CarePlan (= basedOn), a task is created to fulfill a ServiceRequest ( = focus ) to collect a specimen from a patient."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="basedOn represents the 'authorization' chain for an action, not the 'reason for action'.  For example, an order might be placed on hold under the authorization for a surgery.  However the 'reason' for placing the hold is &quot;to avoid interaction with anesthesia medications&quot;&#10;."/>
            <resource value="Task.basedOn is never the same as Task.focus.  Task.basedOn will typically not be present for 'please fulfill' Tasks as a distinct authorization is rarely needed to request fulfillment.  If the Task is seeking fulfillment of an order, the order to be fulfilled is always communicated using `focus`, never basedOn.  However, authorization may be needed to perform other types of Task actions.  As an example of when both would be present, a Task seeking suspension of a prescription might have a Task.basedOn pointing to the ServiceRequest ordering surgery (which is the driver for suspending the MedicationRequest - which would be the Task.focus)."/>
        </commentsUnmatched>
        <requirementsUnmatched reason="Unknown">
            <_pattern value="Allows tracing of authorization for the request and tracking whether proposals/recommendations were acted upon."/>
            <resource value=""/>
        </requirementsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.groupIdentifier" resourcePath="Task.groupIdentifier">
        <shortUnmatched reason="Unknown">
            <_pattern value="Composite request this is part of"/>
            <resource value="Requisition or grouper id"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="A shared identifier common to all requests that were authorized more or less simultaneously by a single author, representing the identifier of the requisition, prescription or similar form."/>
            <resource value="A shared identifier common to multiple independent Task and Request instances that were activated/authorized more or less simultaneously by a single author.  The presence of the same identifier on each request ties those requests together and may have business ramifications in terms of reporting of results, billing, etc.  E.g. a requisition number shared by a set of lab tests ordered together, or a prescription number shared by all meds ordered at one time."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="Requests are linked either by a &quot;basedOn&quot; relationship (i.e. one request is fulfilling another) or by having a common requisition.  Requests that are part of the same requisition are generally treated independently from the perspective of changing their state or maintaining them after initial creation."/>
            <resource value=""/>
        </commentsUnmatched>
        <requirementsUnmatched reason="Unknown">
            <_pattern value="Some business processes need to know if multiple items were ordered as part of the same &quot;prescription&quot; or &quot;requisition&quot; for billing or other purposes."/>
            <resource value="Billing and/or reporting can be linked to whether multiple requests were created as a single unit."/>
        </requirementsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.status" resourcePath="Task.status">
        <shortUnmatched reason="Unknown">
            <_pattern value="draft | active | on-hold | revoked | completed | entered-in-error | unknown"/>
            <resource value="draft | requested | received | accepted | +"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="The current state of the task."/>
            <resource value="The current status of the task."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="The status is generally fully in the control of the requester - they determine whether the order is draft or active and, after it has been activated, completed, cancelled or suspended. States relating to the activities of the performer are reflected on either the corresponding]](s) or using the]] resource.  A nominal state-transition diagram can be found in the] documentation  Unknown does not represent &quot;other&quot; - one of the defined statuses must apply.  Unknown is used when the authoring system is not sure what the current status is.  A status of 'active' when doNotPerform is true means that the request to not perform is currently in force.&#10;&#10;A status of completed for a &quot;doNotPerform&quot; request indicates that the period of non-performance is now satisfied and the request no longer holds."/>
            <resource value=""/>
        </commentsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.statusReason" resourcePath="Task.statusReason">
        <missingTypes _pattern="CodeableConcept" reason="Unknown"/>
        <extraTypes _resource="CodeableReference" reason="Unknown"/>
        <summary _pattern="false" _resource="true" reason="Unknown"/>
        <definitionUnmatched reason="Unknown">
            <_pattern value="Captures the reason for the current state of the task. Note that any change to the state requires the removal of any existing statusReasons, and, if appropriate, populating new statusReasons."/>
            <resource value="An explanation as to why this task is held, failed, was refused, etc."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="This is generally only used for &quot;exception&quot; statuses such as &quot;suspended&quot; or &quot;cancelled&quot;.  The reason why the task was created at all is captured in reasonCode, not here. ."/>
            <resource value="This applies to the current status.  Look at the history of the task to see reasons for past statuses."/>
        </commentsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.intent" resourcePath="Task.intent">
        <modifier _pattern="true" _resource="false" reason="Unknown"/>
        <shortUnmatched reason="Unknown">
            <_pattern value="proposal | plan | order (immutable)"/>
            <resource value="unknown | proposal | plan | order | original-order | reflex-order | filler-order | instance-order | option"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="Indicates the level of authority/intentionality associated with the task and where the request fits into the workflow chain."/>
            <resource value="Indicates the &quot;level&quot; of actionability associated with the Task, i.e. this a proposed task, a planned task, an actionable task, etc."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="This element is expected to be immutable.  E.g. A &quot;proposal&quot; instance should never change to be a &quot;plan&quot; instance or &quot;order&quot; instance.  Instead, a new instance 'basedOn' the prior instance should be created with the new 'intent' value.&#10;&#10;One exception to this is that the granularity of Request.intent is allowed to change.  For example, a Request identified as an &quot;order&quot; might later be clarified to be a &quot;filler-order&quot;.  Or, in rarer cases (to meet recipient constraints), the reverse might also occur.&#10;&#10;When resources map to this element, they are free to define as many codes as necessary to cover their space and will map to &quot;proposal, plan or order&quot;.  Can have multiple codes that map to one of these.  E.g. &quot;original order&quot;, &quot;encoded order&quot;, &quot;reflex order&quot; would all map to &quot;order&quot;.  Expectation is that the set of codes is mutually exclusive or a strict all-encompassing hierarchy."/>
            <resource value="This element is immutable.  Proposed tasks, planned tasks, etc. must be distinct instances.&#10;&#10;In most cases, Tasks will have an intent of &quot;order&quot;."/>
        </commentsUnmatched>
        <requirementsUnmatched reason="Unknown">
            <_pattern value="Proposals/recommendations, plans and orders all use the same structure and can exist in the same fulfillment chain."/>
            <resource value=""/>
        </requirementsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.priority" resourcePath="Task.priority">
        <summary _pattern="true" _resource="false" reason="Unknown"/>
        <definitionUnmatched reason="Unknown">
            <_pattern value="Indicates how quickly the task should be addressed with respect to other requests."/>
            <resource value="Indicates how quickly the Task should be addressed with respect to other requests."/>
        </definitionUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.doNotPerform" resourcePath="Task.doNotPerform">
        <shortUnmatched reason="Unknown">
            <_pattern value="true if request is prohibiting action"/>
            <resource value="True if Task is prohibiting action"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="If true indicates that the task is asking for the specified action to *not* occur."/>
            <resource value="If true indicates that the Task is asking for the specified action to *not* occur."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="The attributes provided with the request qualify what is not to be done.  For example, if an effectiveTime is provided, the &quot;do not&quot; request only applies within the specified time.  If a performerType is specified then the &quot;do not&quot; request only applies to performers of that type.  Qualifiers include: code, subject, occurrence, performerType and performer.&#10;&#10;In some cases, the Request.code may pre-coordinate prohibition into the requested action.  E.g. &quot;NPO&quot; (nothing by mouth), &quot;DNR&quot; (do not recussitate).  If this happens, doNotPerform SHALL NOT be set to true.  I.e. The resource shall not have double negation. (E.g. &quot;Do not DNR&quot;)."/>
            <resource value="The attributes provided with the Task qualify what is not to be done. For example, if a requestedPeriod is provided, the 'do not' request only applies within the specified time. If a requestedPerformer is specified then the 'do not' request only applies to performers of that type. Qualifiers include: code, subject, occurrence, requestedPerformer and performer.&#10;&#10;In some cases, the Request.code may pre-coordinate prohibition into the requested action. E.g. 'NPO' (nothing by mouth), 'DNR' (do not recussitate). If this happens, doNotPerform SHALL NOT be set to true. I.e. The resource shall not have double negation. (E.g. 'Do not DNR').&#10;&#10;doNotPerform should ONLY be used with Tasks that are tightly bounded in time or process phase.  E.g. 'Do not fulfill the midnight dose of medication X tonight due to the early morning scheduled procedure, where the nurse could reasonably check off 'Med X not given at midnight as instructed'.  Similarly, a decision support proposal that a patient should not be given a standard intake questionnaire (because the patient is cognitively impaired) would be marked as 'complete' or 'rejected' when the clinician preps the CarePlan or order set after reviewing the decision support results.  If there is a need to create a standing order to not do something that can't be satisfied by a single 'non-action', but rather an ongoing refusal to perform the function, MedicationRequest, ServiceRequest or some other form of authorization should be used."/>
        </commentsUnmatched>
        <requirementsUnmatched reason="Unknown">
            <_pattern value="Supports things like Do Not Recussitate, Nothing by mouth, etc."/>
            <resource value=""/>
        </requirementsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.code" resourcePath="Task.code">
        <bindingStrength _pattern="example" _resource="extensible" reason="Unknown"/>
        <shortUnmatched reason="Unknown">
            <_pattern value="Service requested/ordered"/>
            <resource value="Task Type"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="A code that identifies the specific service or action being asked to be done (or not done)."/>
            <resource value="A name or code (or both) briefly describing what the task involves."/>
        </definitionUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.product" resourcePath="Task.focus">
        <upperCardinality _pattern="1" _resource="*" reason="Unknown"/>
        <missingTypes _pattern="CodeableReference(BiologicallyDerivedProduct,Device,DeviceDefinition,Medication,NutritionProduct,Substance)" reason="Unknown"/>
        <extraTypes _resource="Reference(Resource)" reason="Unknown"/>
        <shortUnmatched reason="Unknown">
            <_pattern value="Product requested/ordered"/>
            <resource value="What task is acting on"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="Indicates the product whose supply or manipulation is authorized by this task."/>
            <resource value="The request being fulfilled or the resource being manipulated (changed, suspended, etc.) by this task."/>
        </definitionUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.subject" resourcePath="Task.for">
        <lowerCardinality _pattern="1" _resource="0" reason="Unknown"/>
        <missingTypes _pattern="Reference(Patient,Group)" reason="Unknown"/>
        <extraTypes _resource="Reference(Resource)" reason="Unknown"/>
        <shortUnmatched reason="Unknown">
            <_pattern value="Individual the service is ordered/prohibited for"/>
            <resource value="Beneficiary of the Task"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="The individual or set of individuals the action is to be performed/not performed on or for."/>
            <resource value="The entity who benefits from the performance of the service specified in the task (e.g., the patient)."/>
        </definitionUnmatched>
        <requirementsUnmatched reason="Unknown">
            <_pattern value="Links the request to the Patient context."/>
            <resource value="Used to track tasks outstanding for a beneficiary.  Do not use to track the task owner or creator (see owner and creator respectively).  This can also affect access control."/>
        </requirementsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.encounter" resourcePath="Task.encounter">
        <shortUnmatched reason="Unknown">
            <_pattern value="Encounter the task is tied to"/>
            <resource value="Healthcare event during which this task originated"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="The Encounter during which this task was created or to which the creation of this record is tightly associated."/>
            <resource value="The healthcare event  (e.g. a patient and healthcare provider interaction) during which this task was created."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="This will typically be the encounter during which the task was created.  However, some {{title}s may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission activities)."/>
            <resource value=""/>
        </commentsUnmatched>
        <requirementsUnmatched reason="Unknown">
            <_pattern value="Links the task to the Encounter context."/>
            <resource value="For some tasks it may be important to know the link between the encounter the task originated within."/>
        </requirementsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.occurrence[x]" resourcePath="Task.requestedPeriod">
        <missingTypes _pattern="dateTime, Timing" reason="Unknown"/>
        <shortUnmatched reason="Unknown">
            <_pattern value="When service should (not) occur"/>
            <resource value="When the task should be performed"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="The date or time(s) at which the activity or service is desired to occur or not occur."/>
            <resource value="Indicates the start and/or end of the period of time when completion of the task is desired to take place."/>
        </definitionUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.authoredOn" resourcePath="Task.authoredOn">
        <summary _pattern="true" _resource="false" reason="Unknown"/>
        <shortUnmatched reason="Unknown">
            <_pattern value="When request was created/transitioned to active"/>
            <resource value="Task Creation Date"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="For draft tasks, indicates the date of initial creation.  For requests with other statuses, indicates the date of activation."/>
            <resource value="The date and time this task was created."/>
        </definitionUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.requester" resourcePath="Task.requester">
        <extraTypes _resource="Reference(Group)" reason="Unknown"/>
        <shortUnmatched reason="Unknown">
            <_pattern value="Who/what is requesting service"/>
            <resource value="Who is asking for task to be done"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="Who initiated the {{request}} and has responsibility for its activation."/>
            <resource value="The creator of the task."/>
        </definitionUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.performerType" resourcePath="Task.requestedPerformer">
        <upperCardinality _pattern="1" _resource="*" reason="Unknown"/>
        <missingTypes _pattern="CodeableConcept" reason="Unknown"/>
        <extraTypes _resource="CodeableReference(Practitioner,PractitionerRole,Organization,CareTeam,HealthcareService,Patient,Device,RelatedPerson,Group)" reason="Unknown"/>
        <summary _pattern="true" _resource="false" reason="Unknown"/>
        <shortUnmatched reason="Unknown">
            <_pattern value="Desired kind of service performer"/>
            <resource value="Who should perform the Task"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="The type of individual that is desired to act upon/ not act upon the {{request}}."/>
            <resource value="The kind of participant or specific participant that should perform the task."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="If specified without indicating a performer, this indicates that the performer must be (or can't be) of the specified type.  If specified with a performer then it indicates the requirements of the performer if the designated performer is not available.  If doNotPerform is true, then only one of performerType and performer should be present."/>
            <resource value="Group is only allowed in the circumstance where the group represents a family or a household, and should not represent groups of Practitioners where other more specific resources can be used instead."/>
        </commentsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.performer" resourcePath="Task.owner">
        <missingTypes _pattern="Reference(HealthcareService,Device)" reason="Unknown"/>
        <extraTypes _resource="Reference(Group)" reason="Unknown"/>
        <shortUnmatched reason="Unknown">
            <_pattern value="Specific desired (non)performer"/>
            <resource value="Responsible individual"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="Indicates who or what is being asked to perform (or not perform) the {{request}}."/>
            <resource value="Party responsible for managing task execution."/>
        </definitionUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.reason" resourcePath="Task.reason">
        <summary _pattern="true" _resource="false" reason="Unknown"/>
        <shortUnmatched reason="Unknown">
            <_pattern value="Why is service (not) needed?"/>
            <resource value="Why task is needed"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="Describes why the request is being made in coded or textual form, or Indicates another resource whose existence justifies this request."/>
            <resource value="A description, code, or reference indicating why this task needs to be performed."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="Textual reasons can be captured using reasonCode.text.  If doNoPerform is true, this will be the reason why the request is being made to not act."/>
            <resource value="This will typically not be present for Tasks with a code of 'please fulfill' as, for those, the reason for action is conveyed on the Request pointed to by Task.focus.  Some types of tasks will not need a 'reason'.  E.g. a request to discharge a patient can be inferred to be 'because the patient is ready' and this would not need a reason to be stated on the Task."/>
        </commentsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.insurance" resourcePath="Task.insurance">
        <definitionUnmatched reason="Unknown">
            <_pattern value="Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be relevant in delivering the requested service."/>
            <resource value="Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be relevant to the Task."/>
        </definitionUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.supportingInfo" resourcePath="Task.input.value[x]">
        <lowerCardinality _pattern="0" _resource="1" reason="Unknown"/>
        <upperCardinality _pattern="*" _resource="1" reason="Unknown"/>
        <missingTypes _pattern="Reference(Any)" reason="Unknown"/>
        <extraTypes _resource="date, Meta, Address, Attachment, integer, Count, DataRequirement, Dosage, uuid, Identifier, RatioRange, Coding, SampledData, id, positiveInt, Distance, Availability, VirtualServiceDetail, integer64, Period, Duration, canonical, Range, RelatedArtifact, base64Binary, UsageContext, Timing, decimal, ExtendedContactDetail, CodeableConcept, ParameterDefinition, dateTime, code, string, oid, instant, ContactPoint, HumanName, Money, markdown, Ratio, Age, Reference(Resource), TriggerDefinition, Quantity, uri, url, Annotation, ContactDetail, boolean, Expression, CodeableReference, Signature, unsignedInt, time" reason="Unknown"/>
        <shortUnmatched reason="Unknown">
            <_pattern value="Extra information to use in performing request"/>
            <resource value="Content to use in performing the task"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="Information that may be needed by/relevant to the performer in their execution of this task."/>
            <resource value="The value of the input parameter as a basic type."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="See guidance on [notes vs. supportingInfo](request.html#notes)."/>
            <resource value=""/>
        </commentsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.note" resourcePath="Task.note">
        <shortUnmatched reason="Unknown">
            <_pattern value="Comments made about task"/>
            <resource value="Comments made about the task"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="Comments made about the task by the requester, performer, subject or other participants."/>
            <resource value="Free-text information about the task during its lifecycle."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="See guidance on [notes vs. supportingInfo](request.html#notes)."/>
            <resource value=""/>
        </commentsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.relevantHistory" resourcePath="Task.relevantHistory">
        <shortUnmatched reason="Unknown">
            <_pattern value="Key events in history of task"/>
            <resource value="Key events in history of the Task"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="Links to Provenance records for past versions of this resource or fulfilling request or event resources that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the resource."/>
            <resource value="Links to Provenance records for past versions of this Task that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the task."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="This element does not point to the Provenance associated with the *current* version of the resource - as it would be created after this version existed.  The Provenance for the current version can be retrieved with a _revinclude.  Referenced provenances SHOULD adhere to the [provenance-relevant-history profile](provenance-relevant-history.html).&#10;&#10;See additional guidance [here](request.html#history)."/>
            <resource value="This element does not point to the Provenance associated with the *current* version of the resource - as it would be created after this version existed.  The Provenance for the current version can be retrieved with a _revinclude."/>
        </commentsUnmatched>
    </divergentElement>
    <unmappedElement patternPath="Request.deliverTo" reason="Unknown"/>
    <unmappedElement patternPath="Request.category" reason="Unknown"/>
    <unmappedElement patternPath="Request.reported" reason="Unknown"/>
</mappingExceptions>

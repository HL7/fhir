<div xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/1999/xhtml ../../schema/fhir-xhtml.xsd" xmlns="http://www.w3.org/1999/xhtml">
  <a name="requests"> </a>
  <h2>Tasks vs. other Requests</h2>
  <p>
    While Task can be used to seek fulfillment of other authorizations such as <a href="servicerequest.html">ServiceRequests</a>, 
    <a href="medicationrequest.html">MedicationRequests</a>, etc., Task can also be used on its own to solicit action without any 
    prior authorization.  However, such requests for action should be tightly time-bound and be satisfied with a single 'event'.  
    I.e. they should ask as a task-list checkbox that can easily be marked as complete.  Any action that requires ongoing repeated 
    performance should be captured using a different type of resource, not Task.
  </p>
  <a name="titles"> </a>
  <h2>Task Titles</h2>
  <p>
     Tasks often have titles (eg "My Tasks", "Outstanding Tasks for Patient X") which can be presented in a list.  The task title should go into the Task.code as a coded concept and/or text.
  </p>
  <a name="statemachine"> </a>
  <h2>Task state machine</h2>
  <p>
    The following diagram reflects the "typical" state machine for Task.  Note that not all states will be supported by all workflows
    and that some workflows may support additional transitions, including transitions from terminal states (e.g. back to "in-progress"
    from "failed" or "completed").
  </p>
  <img src="task-state-machine.svg" alt="Diagram showing typical state machine for the Task resource"/>

  <a name="cancelled"> </a>
  <h2>The Cancelled state</h2>
  <p>
    While the intention of a "cancelled" task is that all work authorized by the task should cease, this
    might not always be possible practice.  It is possible that the originally requested action could still
    be completed and still attached to the Task but this would not change the status of the task.  If the
    placer cancels a task, it signals they no longer care about the outcome of the task.
  </p>
</div>

<div xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/1999/xhtml ../../schema/fhir-xhtml.xsd" xmlns="http://www.w3.org/1999/xhtml">

<a name="notes"></a>
<h2>
Notes:
</h2>
<ul>
 <li>The CapabilityStatement resource provides for an application to describe its use of the RESTful
  paradigm messaging events, or FHIR documents. Usually, an application would only describe one,
  but more than one may be described</li>
 <li>RESTful CapabilityStatement rules:
  <ul class="dense">
   <li>RESTful servers are required to provide <a href="http.html#capabilities">this resource on demand</a>.
   Servers SHALL specify what resource types and operations are supported, and SHOULD also
   specify profiles for each resource type.</li>
   <li>The CapabilityStatement returned in the capabilities interaction may represent the specific capabilities granted to a specific user if retrieved with that specific user's credentials, if one is in context. Servers that require authentication SHOULD still return a CapabilityStatement before authentication/authorization is performed</li>
   <li>RESTful clients SHOULD publish a capability statement</li>
   <li>The search parameters that a server supports (or a client makes use of) are specified in the resource profile that the capability statement references</li>
   <li>Resource Types or operations that are not listed are not supported</li>
  </ul>
 </li>
 <li>Messaging CapabilityStatement rules:
  <ul class="dense">
   <li>The interpretation of request and response depends on the mode. If the mode is sender,
   then request specifies what the application sends, and response specifies what it accepts.
   If the mode is "receiver", then this is reversed</li>
   <li>If a request or response is not specified for an event, then no rules are made for it</li>
   <li>Events that are not listed are not supported</li>
   <li>The <a href="messagedefinition.html">MessageDefinition</a> resource is newly proposed and is still considered 'draft'.
     The <code>supportedMessage</code> element can be used in place of the <code>event</code> and the work group believes it may meet
     implementer needs better, however because the new mechanism has not yet been reviewed by ballot, the older 'event' mechanism has
     been retained.  Implementers may use one or the other to define their capabilities.  Feedback is welcome.</li>
  </ul>
 </li>
 <li>Document CapabilityStatement rules:
  <ul class="dense">
   <li>Document profiles should directly constrain the Document.information.class &amp; type elements so
    that there is no ambiguity concerning which profile any given document conforms to.</li>
  </ul>
 </li>
 <li>Other service-based use of resources: Due to the variability of these services, the <code>CapabilityStatement</code> resource
   does not attempt to describe service-based use of resources. The various service specifications will need to describe this usage in their own way.</li>
</ul>


<a name="search-decl"></a>
<h3>Supporting Search</h3>

<p>
One of the most important parts of the CapabilityStatement is indicating what search functionality 
a server supports or a client uses. The search can specify the following things:
</p>
<ul>
 <li>What resource types search is supported on, or used on</li>
 <li>What search parameters are supported, and what their names are on this server (the server can use <a href="searchparameter-definitions.html#SearchParameter.code">alternative names</a>).
   Note that clients can also choose to use alternative names for search parameters, but there is no expectation that servers will adapt for the client in this regard</li>
 <li>Servers can define their own search parameters that are not sourced from elsewhere, and often to define 
    searches on extensions (see <a href="searchparameter-example-extension.html">example</a>)</li>  
 <li>What include and reverse includes a server supports, or a client uses</li>
 <li>The Capability Statement does not support saying anything about modifiers or chaining directly, but these 
 kind of statements can be made in the referenced <a href="searchparameter.html">search parameter</a> resources (using 
 <a href="searchparameter-definitions.html#SearchParameter.derivedFrom">SearchParameter.derivedFrom</a> to establish traceability 
 to the original definition of the search parameter)</li>
 <li>Systems can also make statements about their use or support for system wide search (not associated with a particular resource type)</li>
</ul>
[%stu-note%]
It is useful to support discovery of which reverse chaining values a server supports. Clients should not assume that servers support reverse chaining everywhere they support forward chaining. This will require a new field somewhere (e.g., in CapabilityStatement or in SearchParameter). Will review with FHIR-I, re: the best place to put this.
</p>
<p>
The most important use of support for reverse (or forward!) chaining might be in establishing conformance requirements for a server, rather than in supporting "live" discovery of a server's capabilities. (The latter could simply be tested by a client, rather than relying on possibly-incomplete or possibly-incorrect discovery data.)
</p>
<p>
Open question #1 would we want a way for servers to advertise which specific pairs of (searched resource + reverse chained search params) it support. For example, a server might need to say that the following is supported:
</p>
<pre>
GET [base]/Patient?_has:Observation:subject:code=1234-5
</pre>
<p>
... even though the following is not:
</p>
<pre>
GET [base]/Group?_has:Observation:subject:code=1234-5
</pre>
<p>
Open question #2: concern is that the possibility space is so broad that it might not be worth capturing all of this in such detail. Where to draw the line?
[%end-note%]


[%stu-note%]
There is no way for a server to communicate how it supports search at this time. 
FHIR-I plans to address this and other search issues for R6.
[%end-note%]

<a name="profiles"></a>
<h3>Supporting Profiles</h3>
<a name="tags"></a>
<p>
A CapabilityStatement declares two different kinds of profiles for the functionality it describes.
For a discussion of the use of these two types of resources, see <a href="profiling.html">two uses for profiles</a>.
</p>

</div>

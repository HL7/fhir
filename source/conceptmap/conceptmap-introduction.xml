<div xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/1999/xhtml ../../schema/fhir-xhtml.xsd" xmlns="http://www.w3.org/1999/xhtml">

<div> 
<a name="scope"></a>
<h2>Scope and Usage</h2> 
[%dragons-start%]
<p class="warning">
As a number of FHIR software components are dependent on the <a href="conceptmap.html">ConceptMap</a> resource in its current form, it is difficult to make significant changes to it without negatively affecting these components. For this reason, it has been agreed that all updates to the <a href="conceptmap.html">ConceptMap</a> resource will be applied to the <a href="conceptmap.html">ConceptMap</a> resource. At some point in the future the content of the <a href="conceptmap.html">ConceptMap</a> resource will replace the content of the <a href="conceptmap.html">ConceptMap</a> resource, impacts on depndent components will be resolved, and the <a href="conceptmap.html">ConceptMap</a> resource will be removed. 
</p>
[%dragons-end%]
<p>
A concept map defines a mapping from a set of concepts defined in a code system (commonly referred to as the "system") to one or more concepts defined in other code systems.  In the mapping context, a system can be a typical <a href="terminologies.html">code system</a> based on a recognized standard or local terminology (in any of its forms), or in some cases it may be an <a href="conceptmap.html#implicit">"implicit" code system</a> that is not based on a recognized terminology but still represents a set of "concepts" that can be usefully mapped. Mappings are one way - from the source to the target system. In many cases, the reverse mappings are valid, but this cannot be assumed to be the case. 
</p>
<p>
Mappings between code system concepts are only intended to be defined in the context of a particular business usage.  The business use case is normally defined by the specification of the source and target value sets. 
The mappings may be useful in other contexts, but this must be determined based on the context of use and meaning; it cannot be taken for granted automatically. An example where the usage context is important for choosing the correct mapping is mapping from a clinical terminology (e.g. SNOMED CT) to a classification (e.g. ICD-10) for either data analysis or billing.  Mappings in the data analysis context would be targeted for an appropriate classification (often at a higher level), whereas in the billing context there may be specific requirements to be met (e.g. leaf level codes only) that could result in multiple mappings for a single source concept and then require additional information beyond the source concept itself in order to select the correct final mapping.
</p>
<p>
Note that all code systems (explicit or implicit) represented in FHIR have URI identifiers for value sets (also either explicit or implicit) that include the entire code system, and these <a href="terminology-service.html#4.6.5">"all codes" value sets</a> can be used for mappings that are valid in all use contexts that are appropriate for the code system.
</p>
<p>
Each mapping from a source concept to a target concept includes a <a href="valueset-concept-map-relationship.html">relationship</a> 
element describing the semantic correspondence between the two (or, in some cases, that there is no valid mapping).
There can be an <code>element</code> for each concept or field in the <code>sourceScope</code> value set or <code>group.source</code> code system that needs to be mapped.
Each source concept may have multiple targets:
</p>
<ul>
 <li>because there are multiple possible mappings (e.g., ambiguous)</li>
 <li>to specify a correct map, and specify other mappings as invalid</li>
 <li>when there are multiple mappings depending on the values of other elements (dependsOn)</li>
</ul>
<p>
The mapping applies to all members of the expansion of the <code>group.element.valueSet</code> which 
are also within the scope of <code>sourceScope</code> if specified.
</p>
<p>
The meaning associated with the use of group.element.valueSet is the same as having individual 
<code>group.element.code</code> mappings for each concept in the expansion of the <code>group.element.valueSet</code>.
</p>
<p>
The mapping applies to all members of the expansion of the <code>group.element.target.valueSet</code> which are 
also within the scope of <code>targetScope</code> if specified.
</p>
<p>
The meaning associated with the use of <code>group.element.target.valueSet</code> is the same as having individual 
<code>group.element.target.code</code> mappings for each concept in the expansion of the <code>group.element.target.valueSet</code>.
</p>
<p>
The expansion of the <code>group.unmapped.valueSet</code> value set provides the set of fixed codes to use when the mode = 'fixed'. 
All unmapped source codes are then mapped to each of these fixed codes.
</p>
<p>
There SHOULD be at least one target for each element, but some incomplete concept maps 
might not have a target for each concept. 
</p>
<p>
A key concept for the ConceptMap resource is the <a href="conceptmap-operation-translate.html">$translate operation</a>. This operation 
is a formal definition of an API by which a <a href="terminology-service.html">terminology server</a> can allow clients to ask for a 
translation to be done based on the content in the ConceptMap resource. As such it also provides useful perspective on the 
operational use of ConceptMap resources in any context.
</p>
</div>

<div>
<a name="bnr"></a>
<h2>Boundaries and Relationships</h2>
<p>
While <code>ConceptMap</code> resources are not referred to directly from any other 
resource, they may be included and used in <a href="implementationguide.html">ImplementationGuide</a>
resources, and provide background knowledge that is useful in many contexts, including
<a href="operations.html">operations</a> defined in this specification.
</p>
<p>
In addition to <code>ConceptMap</code>, there is also the <a href="structuremap.html">StructureMap</a>
resource. The ConceptMap resource defines relationships between concepts in their own right,
along with grading of their equivalencies, while the StructureMap defines an executable 
transform for instances that conform to a known structure.
</p>
<p>
Both <a href="codesystem.html">Code System</a> supplements and Concept Maps may be used to define relationships between concepts 
in different systems. ConceptMaps are assertions of the relationships between different concepts 
that are associated with particular contexts of use, while CodeSystem supplements are used to 
define inherent properties and semantics of the concepts in the code system
</p>

</div>

<div>
<a name="bnc"></a>
<h2>Background and Context</h2>
<p>
Further discussion of the issues involved in mapping between concept definition systems can be found in the  
<a href="http://www.hl7.org/documentcenter/public/standards/V3/core_principles/infrastructure/coreprinciples/v3modelcoreprinciples.html">HL7 v3 Core Principles</a> document 
and the functionality described in the <a href="http://www.omg.org/spec/CTS2/1.0/">OMG CTS 2</a> specification. 
</p>


</div>
 


</div>


<div xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/1999/xhtml ../../schema/fhir-xhtml.xsd" xmlns="http://www.w3.org/1999/xhtml">

<div>
<a name="scope"></a>
<h2>Scope and Usage</h2>
<p>
The audit event is based on the IHE-ATNA Audit record definitions, originally from <a href="http://tools.ietf.org/html/rfc3881">RFC 3881</a>, and now managed by
DICOM (see <a href="http://medical.nema.org/medical/dicom/current/output/html/part15.html#sect_A.5">DICOM Part 15 Annex A5</a>). 
</p>
<ul>
<li>ASTM E2147 – Setup the concept of security audit logs for healthcare including accounting of disclosures</li>
<li>IETF RFC 3881 – Defined the Information Model (IETF rule forced this to be informative)</li>
<li>DICOM Audit Log Message – Made the information model Normative, defined Vocabulary, Transport Binding, and Schema</li>
<li>IHE ATNA – Defines the grouping with secure transport and access controls; and defined specific audit log records for specific IHE transactions.</li>
<li>NIST SP800-92 – Shows how to do audit log management and reporting – consistent with our model</li>
<li>HL7 PASS – Defined an Audit Service with responsibilities and a query interface for reporting use</li>
<li>ISO 27789 – Defined the subset of audit events that an EHR would need </li>
<li>ISO/HL7 10781 EHR System Functional Model Release 2</li>
<li>ISO 21089 Trusted End-to-End Information Flows</li>
</ul>
<p>
This resource is managed collaboratively between HL7, DICOM, and IHE. 
</p>
<p>
A record of an event relevant for purposes such as operations, privacy, security, maintenance, and performance analysis. 
</p>
</div>
<div>
<a name="bnc"></a>
<h2>Background and Context</h2>
<p>
All actors - such as applications, processes, and services - involved in an auditable event should record an AuditEvent. 
This will likely result in multiple AuditEvent entries that show whether privacy and security 
safeguards, such as access control, are properly functioning across an enterprise's system-of-systems. 
Thus, it is typical to get an auditable event recorded by both the application in a workflow process and the servers that support them. 
For this reason, duplicate entries are expected, which is helpful because it may aid in the detection of 
security, privacy, or other operational problems. For example, 
fewer than expected actors being recorded in a multi-actor process or attributes related to those records being in 
conflict, which is an indication of a security problem.
There may be non-participating actors, such as trusted intermediary, that also detect a security, privacy, or operational relevant event and thus would record an AuditEvent.
</p>
<p>
Security relevant events are not limited to communications or RESTful events. They include: 
</p>
<ul>
<li>software start-up and shutdown;</li>
<li>user login and logout; </li>
<li>access control decisions; </li>
<li>configuration events; </li>
<li>software installation; </li>
<li>policy rules changes; and </li>
<li>manipulation of data that exposes the data to users. </li>
</ul>
<p>
See the 
<a href="valueset-audit-event-sub-type.html">Audit Event Sub-Type</a> vocabulary for guidance on some security relevant events.
</p>
<p>
The content of an AuditEvent is intended for use by security system administrators, security and privacy information 
managers, and records management personnel.  This content is not intended to be accessible or used directly by other 
healthcare users, such as providers or patients, although reports generated from the raw data would be useful. An 
example is a patient-centric accounting of disclosures or an access report. Servers that provide support for AuditEvent resources would not generally accept update or delete operations on the resources, as this would compromise 
the integrity of the audit record. Access to the AuditEvent would typically be limited to security, privacy, 
or other system administration purposes.
</p>
<p>
Relationship of AuditEvent and Provenance resources are often (though not exclusively) created by the application 
responding to the create/read/query/update/delete/execute etc. event. 
A <a href="provenance.html">Provenance</a> resource contains overlapping 
information, but is a record-keeping assertion that gathers information about the context in which the information 
in a resource "came to be" in its current state, e.g., whether it was created de novo or obtained from another entity 
in whole, part, or by transformation. Provenance resources are prepared by the application that initiates the 
create/update of the resource and may be persisted with the AuditEvent target resource. 
</p>
</div>


</div>

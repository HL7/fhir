<div xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/1999/xhtml ../../schema/fhir-xhtml.xsd" xmlns="http://www.w3.org/1999/xhtml">

<!-- insert xhtml content here -->

<h3>Applying an ActivityDefinition</h3>

<p>An ActivityDefinition resource provides a description, or template, of an action to performed. These actions can be purely text-based descriptions of the action to be performed, only interpretable by a human user, or they can be structured definitions with enough information to construct a resource to represent the request or activity directly. This process of converting the ActivityDefinition into a specific resource in a particular context is performed with the <code>$apply</code> operation.</p>

<p>In the simplest case, the process maps the elements specified in the ActivityDefinition to the corresponding elements on a resource of the appropriate type, using the <code>kind</code> element of the definition to determine the type of resource to be created.</p>

<p>More dynamic scenarios can be achieved in one of two ways, either by providing <code>dynamicValue</code> expressions, or by specifying a <a href="structuremap.html">StructureMap</a> that transforms the definition into the appropriate request resource.</p>

<p>Note that systems will likely vary widely in the degree of support they provide for the <code>$apply</code> operation. In particular, the fact that a system supports applying definitions of one category, does not imply that it supports applying definitions for all categories. For example, a service focused on medication order sets may have sophisticated support for MedicationRequest activities, but no support at all for the ServiceRequest activities.</p>

<p>The following diagram illustrates the relationship between the PlanDefinition and ActivityDefinition resources, as well as a typical application to CarePlan, RequestGroup, and Request resources:</p>

<img src="action-and-activity-definition.png" alt="relationship-between-action-and-activity-definition"/>

<p>To accommodate the variability in systems and use cases, this specification is not prescriptive about exactly how an ActivityDefinition is applied to produce target request or event resources. However, the approach depicted above provides a general framework for the process, and the following steps provide more detail on the potential approach:</p>

<ol>
	<li>Create the target resource of the type specified by the <code>kind</code> element and focused on the Patient in context</li>
	<li>Set the <code>status</code> of the target resource to <i>draft</i></li>
	<li>Apply the structural elements of the ActivityDefinition to the target resource such as <code>code</code>, <code>timing</code>, <code>doNotPerform</code>, <code>product</code>, <code>quantity</code>, <code>dosage</code>, and so on</li>
	<li>Resolve the <code>participant</code> element based on the user in context</li>
	<li>Resolve the <code>location</code> element based on the location in context</li>
	<li>If the <code>transform</code> element is specified, apply the transform to the resource. Note that the referenced StructureMap may actually construct the resource, rather than taking an instance. See the StructureMap for more information</li>
	<li>Apply any <code>dynamicValue</code> elements (in the order in which they appear in the ActivityDefinition resource) by evaluating the expression and setting the value of the appropriate element of the target resource (as specified by the <code>dynamicValue.path</code> element)</li>
</ol>

<p>Note that the parameters to the $apply operation are available within dynamicValue CQL and FHIRPath expressions as context variables, accessible by the name of the parameter prefixed with a percent (%) symbol. For example, to access the subject given to the apply, use the expression <code>%subject</code>.</p>

<p>Note that result of this operation is transient (i.e. none of the resources created by the operation are persisted in the server, they are all returned as contained resources in the result). The result effectively represents a proposed set of activities, and it is up to the caller to determine whether and how those activities are actually carried out.</p>

<h3>Profiling ActivityDefinition</h3>

<p>Because the ActivityDefinition resource can be used to describe many different types of request resources, profiles of the resource will be useful in communicating additional constraints and expectations about how the resource should be used in a particular context. For example, a profile of ActivityDefinition may specify that it is intended to describe medication orders within an order set. Such a profile would indicate that the <code>quantity</code> element should not be used, but the <code>dosage</code> element must be.</p>

</div>

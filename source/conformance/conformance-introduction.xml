<div xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/1999/xhtml ../../schema/xhtml1-strict.xsd" xmlns="http://www.w3.org/1999/xhtml">

<!-- 
todo
* add flag for accept unknown content
* Need to add back to the conformance resource about how creates and ids work for a system
* Need to avoid imposing requirement to keep version history while still supporting versioning as much as possible
 -->
<p>
Conformance Statements provide for a degree of automatic configuration and adaptation.
However, capturing absolutely every variation that could impact the interoperability of
two systems, let alone keeping that detailed information up-to-date as systems evolve 
through maintenance and upgrades is rarely practical. Therefore, conformance statements 
should be seen as an interim step.  They provide a degree of automation.  However, they 
also provide a great deal of human-readable content that can minimize the need for direct 
communication between the operators of the systems being configured to interoperate.
</p>
<p>
Conformance statements are used in one of three ways:
</p>
<h2>Describe an actual implementation</h2>
<p>
In this scenario, the conformance statement describes the capabilities of a deployed 
and configured solution available at a particular access point or set of access points.  
The statement describes exactly how to interface with that deployed solution and thus 
provides for a degree of self-configuration of software solutions.
</p>
<p>
This is the type of 
profile that FHIR restful solutions are expected to make available on invocation of the 
<i>conformance</i> operation.  It is also the type of statement that forms a basis for
the testing, certification or commissioning of specific software installations.
</p>
<p>
A conformance statement is identified as being an implementation statement through the 
presence of the <i>implementation</i> element.
</p>

<h2>Describe software solution capabilities</h2>
<p>
In this scenario, the conformance statement describes the generic capabilities of a 
software application or component solution.  The solution might be available for
purchase or other acquisition and might be deployed and configured at any number of
independent sites.  Because it is not dependent on any particular implementation, the
profile cannot provide specific details such as endpoint addresses.  It may also need
to document various configurations in which the application can be set up or describe
the degree of customizability associated with the solution.
</p>
<p>This type of statement may be used as a marketing tool by software and system
developers to formally describe their capabilities.  It can also be used as the basis
for conformance testing of software solutions independent of a particular installation.
</p>
<p>
A conformance statement is identified as being a software solution statement through the 
presence of the <i>software</i> element.
</p>

<h2>Describe a desired solution</h2>
<p>
In this scenario, the conformance statement describes the capabilities of a desired
system.  It might be used as part of an architectural design process to document
needed system capabilities, or might be used as part of an RFP process to formally
document the requirements of a requested solution and to document the criteria by
which proposals will be evaluated.
</p>
<p>
A conformance statement is identified as being a requirements statement through the 
presence of the <i>proposal</i> element.
</p>
<br/>

<p>
These three types of profiles can be used together.  A requirements statement can 
be compared against the solution statements proffered by respondents to an RFP.  A 
solution statement for a software package forms the starting point for the implementation 
statement associated with a particular installation of that software package.
</p>

</div>

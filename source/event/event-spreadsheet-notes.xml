<div xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/1999/xhtml ../../schema/fhir-xhtml.xsd" xmlns="http://www.w3.org/1999/xhtml">

  <a name="extensions"> </a>
  <h2>Extensions</h2>
  <p>
    Not all resources that follow the 'Event' pattern will necessarily include all of the above elements.  A set of standard extensions have been defined
    for use with resources where an element might be "applicable" but is not commonly supported.  A list of these can be found on the 
    <a href="event-extensions.html">Event Extensions</a>(event-specific) and <a href="workflow-extensions.html">Workflow Extensions</a>(shared by events
    and requests).
  </p>

  <a name="statemachine"> </a>
  <h2>State Machine</h2>
  <p>
    The following diagram shows the "typical" state machine diagram for resources following the Event
    pattern.  Note that not all resources will support all states, some resources may choose different names
    for certain states and some resources may introduce sub-states to the listed states.  As well, additional
    transitions may be supported, including from terminal nodes (e.g. from "completed" back to "in-progress").
    That said, most resources should align with this state machine fairly well.
  </p>
  <img src="event-state-machine.svg" alt="Typical state machine diagram for resources following 
  the Event pattern"/>

  <a name="history"> </a>
  <h2>Event history</h2>
  <p>
    This pattern contains an element called "eventHistory" that points to <a href="provenance.html">Provenance</a>.  This allows the 
    resource to summarize key events that have happened over the lifespan of the resource.  For example, when the event started, 
    when it was suspended, when it was resumed, etc.  The list of referenced Provenence entries don't necessarily include <i>all</i> events 
    that have occurred over the lifespan of the resource.  Instead, they list those the author considers 'significant' and relevant to 
    downstream users.  Modifications to drafts or small corrections that do not impact fulfillment might not be needed.  In some cases,
    Provenance for changes to other resources (e.g. component events) might also be included if the source system tracks those as
    'events' tied to the Event.
  </p>
  <p>
    <b>IMPORTANT:</b> the eventHistory generally excludes the most recent change on 'pure' FHIR repositories.  That is because in
    pure FHIR environments, the Provenance instance must be created after the update has been made - because it needs to point to the new 
    'version' of the resource that has been created.  This means that if there is a desire to include the 'current' change in relevant history, 
    it is necessary to first make the change, then update the resource to add the event to recentHistory.  More typically, recentHistory 
    simply won't include the most recent event.  If the full history is needed, the system will need to retrieve both the history as well as
    the Provenance that points to the current release.  
  </p>
  <p>
    For systems that don't store history separately from the base resource, the eventHistory Provenance instances can be conveyed
    as <a href="references.html#contained">contained resources</a>.  In this circumstance, there might also not be an issue with eventHistory 
    also including the 'most recent' change as the history is updated at the same time the change is applied.
  </p>
  <p>
    The full set of potential Provenance information may be overkill for those systems that are only interested in it from a
    eventHistory perspective.  The <a href="provenance-relevant-history.html">Provenance Relevant History</a> profile is included to give guidance 
    on what data elements are most likely to be relevant for systems looking at Provenance from the perspective of eventHistory.
  </p>

</div>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
       "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

      
[%settitle FHIR Roadmap%]
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
[%file newheader%]
</head>
<body>
[%file newnavbar%]

<div class="col-9">

<a name="root"> </a>
<h2>FHIR Roadmap</h2>
<p>
Welcome to the FHIR (Fast Healthcare Interoperability Resources) Specification. This page provides a road map for first-time readers of the specification to help find your way around FHIR quickly. 
</p>
<p>
Broadly, the FHIR specification is broken up into 3 parts: 
</p>
<ul>
 <li>General <a href="documentation.htm">documentation</a> that describes how <a href="resources.htm">resources are defined</a>, 
   and gives background material including definitions of <a href="datatypes.htm">data types</a>, <a href="terminologies.htm">codes</a>, and the <a href="xml.htm">XML</a> and <a href="json.htm">JSON formats</a></li>
 <li><a href="implementation.htm">Implementation</a> - how to use resources using <a href="http.htm">REST</a>, <a href="message.htm">Messaging</a>, as <a href="document.htm">clinical documents</a>, or in a <a href="soa.htm">service based architecture</a></li>
 <li>The <a href="resourcelist.htm">resource list</a> - a list of all the resources defined by FHIR. You can also get lists 
     for <a href="clinical.htm">clinical</a>, <a href="administration.htm">administrative</a> and <a href="infrastructure.htm">infrastructural</a> resources</li>
</ul>
<p>
Resources have a wide range of uses, from pure clinical content such as <a href="careplan.htm">care plans</a> and <a href="diagnosticreport.htm">diagnostic reports</a> through to pure infrastructure
such as <a href="message.htm">messaging</a> and <a href="conformance.htm">conformance</a> statements. They all share common technical characteristics (see below for a more formal definition), 
but they are used in totally different fashions. Note that you do not have to use REST to make use of resources.
</p>

<h3>Where to Start</h3>
<p>
The best place to start is to quickly read the <a href="resourcelist.htm">Resources</a> list to get a sense of what resources exist and then look at 
the <a href="patient.htm">Patient resource</a> definition to see what resource definitions look like, and then read these background pages:
</p>
<ul>
  <li><a href="resources.htm">Resource Definitions</a> - basic background to how resources are defined</li>
  <li>About Resources: the <a href="narrative.htm">Narrative</a> they all contain, and how <a href="references.htm">Resources refer to each other</a></li>
  <li><a href="formats.htm">Formats</a>: <a href="xml.htm">XML</a> and <a href="json.htm">JSON</a></li>
  <li>About <a href="extensibility.htm">Extensibility</a>: a key way that the specification is kept simple</li>
</ul>

<h4>Header Tabs</h4>
<p>
These header tabs found through-out the specification are important, and many readers miss them: 
</p>
<p align="center">
<img src="header-tabs.png"/>
</p>
<p>
Resources and the <a href="datatypes.htm">data types</a> that they use are presented in an concise easy to read XML-like format,
but they also have formal definitions that describe their contents in considerable detail. In addition, most resources are mapped to several
different formats, including HL7 v2, the HL7 v3 RIM, CDA, DICOM, and others. Also, all resources come with at least one example (sometimes 
many more) and, where appropriate, with profiles that describe their use in specific circumstances. Finally, some resources include 
notes that helps implementers understand the design rationale underlying them. 
</p>

<h3>What are resources?</h3>

<p>
Resources are:
</p>
<ul class="dense">
 <li>Atomic - they are the smallest defined unit of operation and have a transaction scope of their own</li>
 <li>Connected - resources refer to other resources to allow for clean modular reuse of information</li>
 <li>Independent - the content of a resource can be processed without having to retrieve referenced resources</li>
 <li>Simple - each resource definition is easy to understand, and to implement without needing specialized tooling or infrastructure (though that can be used if desired)</li>
 <li>RESTful - resources are able to be used in a RESTful exchange context</li>
 <li>Flexible - resources can also be used in non-RESTful contexts, such as messaging or SOA architectures and can be moved in and out of RESTful paradigms as convenient</li>
 <li>Extensible - resources can be extended to allow for local requirements without impacting interoperability</li>
 <li>Webcentric - where possible and appropriate, open internet standards are used for data representation</li>
 <li>Free for use - the FHIR specification itself is open - anyone can implement FHIR or derive related specifications without any IP restrictions</li>
</ul>
<p>
Though the resources are simple and easy to understand, they are backed by a thorough, global 
requirements gathering and formal modeling process that ensures that the content of the resources 
is stable and reliable. The resource contents are mapped to solid underlying ontologies and 
models using computable languages (including RDF) so that the definitions and contents of the 
resources can be leveraged by computational analysis and conversion processes.
</p>
<p>
FHIR also provides an underlying conformance framework and tooling that allows different implementation
contexts and enterprises to describe their context and use of resources in formal computable ways and
to empower computed interoperability that leverages both the conformance and definitional frameworks. 
</p>
<p>
The combination of the resources and the 3 supporting layers (implementation frameworks, definitional
thoroughness, and conformance tooling), along with the completely free license of FHIR itself 
frees healthcare data so that it can easily flow to where it needs to be (across hospital 
production systems, mobile clinical systems, cloud based data stores, national health repositories, 
research databases, etc.) without having to pass through format and semantic inter-conversion hurdles along the way. 
</p>


</div>

[%file newfooter%]
    
    
</body>
</html>

<div xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/1999/xhtml ../../schema/fhir-xhtml.xsd" xmlns="http://www.w3.org/1999/xhtml">

<p>
Notes:
</p>
<ul>
<li>multipleBirth can be either expressed as a Boolean (just indicating whether the patient is part of a multiple birth) or as an integer, indicating the actual birth order.</li>
<li>Patient records may only be in one of two statuses: in use (active=true) and not in use (active=false). 
A normal record is active, i.e. it is in use. Active is set to 'false' when a record is created as a duplicate or in error. 
A record does not need to be linked to be inactivated.
</li>
<li>The <i>link</i> element is used to assert that two or more Patient resources are both about the same actual patient. 
See below for further discussion</li>
<li>There should be only one preferred language (Language.preference = true) per mode of expression.</li>
<li>The Contact for a Patient has an element <i>organization</i>, this is for use with guardians or business related contacts where just the organization is relevant.</li>
</ul>

<a name="ids"></a>
<h2>Patient ids and Patient resource ids</h2>
<p>A Patient record's <a href="resource.html#id">Resource Id</a> can never change. For this reason, the identifiers with 
which humans are concerned (often called MRN - Medical Record Number, or UR - Unit Record) should not 
be used for the resource's id, since MRN's may change, i.e. as a result of having duplicate records of
the same patient. Instead they should be represented in the <i>Patient.identifier</i> 
list where they can be managed. This is also useful for the case of institutions that have acquired 
multiple numbers because of mergers of patient record systems over time.
</p>
<p>
Where there is a need to implement an automated MRN Identifier created for a patient record, this could be achieved by providing an identifier in the patient with an appropriate assigner, MRN Type and/or system but with <i>no value</i> assigned. Internal business rules can then detect this and replace/populate this identifier with 1 or more identifiers (as required).
</p>



<a name="links"></a>
<h2>Linking Patients</h2>
<p>The <i>link</i> element is used to assert that patient resources refer to the same patient. This element is used
to support the following scenarios where multiple patient records exist:</p>

<a name="dup-records"></a>
<h3>Duplicate Patient records</h3>
<p>Managing Patient registration is a well-known difficult problem. Around 2% of registrations are in error, 
mostly duplicate records. Sometimes the duplicate record is caught fairly quickly and retired before much 
data is accumulated. In other cases, substantial amounts of data may accumulate. By using a link of type 'replaced-by',
the record containing such a link is marked as a duplicate and the link points forward to a record that should
be used instead. Note that the record pointed to may in its turn have been identified as created in error and forward
to yet another Patient resource. Records that replace another record <i>may</i> use a link type of 'replaces' pointing to the old record.
</p>

<a name="rec-ind"></a>
<h3>Patient record in a Patient index</h3>
<p>A Patient record may be present in a system that acts as a Patient Index: it maintains a (summary of) patient data and
a list of one or more servers that are known to hold a more comprehensive and/or authoritative record of the same patient.
The link type 'refer' is used to denote such a link. Note that linked records may contain contradictory information. The
record referred to does not point back to the referring record.</p>

<a name="distributed"></a>
<h3>Distributed Patient record</h3>
<p>In a distributed architecture, multiple systems keep separate patient records concerning the same patient. These
records are not considered duplicates, but contain a distributed, potentially overlapping view of the patient's data.
Each such record may have its own focus or maintaining organization and there need not be a sense of one record
being more complete or more authoritative than another. In such cases, links of type 'see also' can be used to point to
other patient records. It is not a requirement that such links are bilateral. 
</p>

<a name="linking"></a>
<h2>Patient vs. Person vs. Patient.Link vs. Linkage</h2>
<p>
The Person resource on the surface appears to be very similar to the Patient resource, and the usage for it is very similar
to using the Patient.Link capability.<br/>
The intention of the Person resource is to be able to link instances of resources together that are believed to be the same
individual. This includes across resource types, such as RelatedPerson, Practitioner, Patient and even other Person resources.<br/>
The Patient Link however is only intended to be used for Patient resources.
</p>
<p>
The primary use case for the Person resource is to be able to support person registries that do not necessarily have a
healthcare context, and are able to identify and quantify confidence levels that this is the same person.<br/>
This could include consumer portals where the maintainer of the person information is the actual person themselves.<br/>
A system could use the Person entry to cross check changes to information applied to one part of a record to values in another
system; e.g., when moving, a consumer updates his contact numbers and address in his person record, and then a Patient Administration
system is able to see that this data is changed and prompt the organization to follow up with the patient that was linked to
the person record if they want their details updated, or if they no longer need services and they should be cancelled, 
as they've moved from the area.
</p>
<p>
The <a href="linkage.html">Linkage</a> resource and the Patient.link property conceptually perform similar functions in FHIR, 
both provide an assertion of linkages between multiple resource instances that are referring to the same underlying individual.<br/>
When a Patient resource is linked/merged then it needs to have an internal indication that there is another
patient resource that should be considered when referencing other records, which is achieved using the patient.link property.<br/>
Not detecting/checking for a potential linkage could mean that related clinical records are not discovered, potentially impacting patient safety.
(which is why using the Linkage resource is not appropriate, as its use in this manner would force the use of either another
query to potentially locate other patient resources to consider, or use _revinclude)
</p>

<a name="contact"></a>
<h2>Patient.contact vs. RelatedPerson</h2>
<p>
The contact element on the Patient resource should be used for storing the details of people to contact. This information always travels with the Patient resource, and cannot be used as the target of a reference.

Where related people need to be referenced by other resources (e.g. CarePlan.participant, Encounter.participant, DocumentReference.author, Appointment.participant), the RelatedPerson resource must be used.
</p>
<p>It is not expected that these records will be used for recording the primary care provider; this information should be stored in
the Patient.generalPractitioner field.</p>

<a name="gender"></a>
<h2>Patient Gender and Sex</h2>

<p>
Many systems and organizations only provide for a single attribute that aspires to represent all aspects of a patient's gender and sex with a single value. However, there are many considerations around sex and gender documentation and interoperability.  Listed below are various social and biological attributes that are relevant in the healthcare setting, as well as information on how each can be communicated.
</p>
<ul>
 <li><b>Administrative Gender</b> - in order to interoperate with systems that use a single generic property, the basic <a href="patient-definitions.html#Patient.gender">Patient.gender</a> property represents an administrative gender: the gender that the patient is considered to have for administration and record keeping purposes. This property is often used as an input to patient matching algorithms.  Systems should not infer any specific clinical meaning from Patient.gender without pre-coordination with exchange partners.</li>
</ul>
<p>
In addition to this administrative gender, other kinds of gender or sex properties may be represented:
</p>
<ul>
	<li><b>Gender Identity</b> - a gender the patient has indicated they consider themselves to be.  The gender identity can influence how the patient prefers to be addressed by care providers and other individuals.   The standard <a href="extension-individual-genderidentity.html">genderIdentity</a> extension may be used to communicate this property.  This extension is appropriate when the gender identity is openly known.  When determining how to address the patient, the <a href="extension-individual-pronouns.html">pronouns</a> extension may also be applicable.
	</li>
	<li><b>Sex for Clinical Use (SFCU)</b> - a categorization of a patient's clinical sex derived from observable information such as an organ inventory, recent hormone lab tests, genetic testing, etc. This property is intended for use in clinical decision making, and indicates that treatment or diagnostic tests should consider best practicies associated with the relevant reference population.  The standard <a href="extension-patient-sexforclinicaluse.html">sexForClinicalUse</a> extension may be used to communicate this property.
	
	<ul>
	<li><b>Clinical Observations about sex characteristics</b> - a testable observation about a biological property of the patient.  This could include karyotypic/genetic/chromosomal sex, gonadal sex, ductal sex, hormone levels, or various other phenotypic attributes, etc.  Clinical observations about sex characteristics should be represented using <a href="observation.html">Observation</a>, qualified with the appropriate clinical codes from LOINC and/or SNOMED.  These observations may serve as supporting information for the Sex for Clinical Use categorization.
	</li>
	</ul>
	</li>	
	<li><b>Recorded Sex or Gender</b> - the recorded sex or gender concept includes the various sex and gender concepts that are often used in existing systems but are not known to represent a gender identity or sex for clincal use.  Examples of recorded sex or gender concepts include administrative gender, administrative sex, and sex assigned at birth.  Other examples include the sex or gender marker on a birth certificate, insurance card, driver's license, passport or other document.  These sex or gender concepts vary widely in their use and possible values. For the purposes of exchanging these concepts, implementers are encouraged to define the specific sex or gender concept that is relevant for their use case, and create a use-case specific property or extension to represent that specific concept.  For example, if the sex assigned at birth is an important concept in a specific jurisdiction, that jurisdiction can create an realm-specific extension for that concept.  In cases where a specific property or extension is not practical, or there is a need to represent a historical field that is not well defined, there is a standard <a href="extension-individual-recordedsexorgender.html">recordedSexOrGender</a> extension that may be used.
	<ul>
	<li><b>Legal Sex or Gender</b> - a sex or gender value documented on a legal document, such as a passport, driver's license, birth certificate, or other document.  Regional and national entities often categorize citizens using a single legal sex value.  The legal sex of a patient can vary from region to region and country to country.  A single patient may have multiple legal sex values at the same time in different jurisdictions, or even on different legal documents within a single jurisdiction.  In cases where the Patient.gender administrative property is not sufficient to communicate legal sex, either realm specific extensions or the <a href="extension-individual-recordedsexorgender.html">recordedSexOrGender</a> extension may be used.
	</li>
	<li><b>Sex assigned at Birth</b> - the sex assigned at birth is a sex or gender value assigned to a patient at birth.  This value is often documented on the birth registration. Some jurisdictions allow variations such as not yet determined, unknown, or undifferentiated, while others do not. Some jurisdictions also allow birth registration information to be updated.  The sex assigned at birth may often be a poor approximation of the patient's current sex for clinical use, especially for adult patients.  See <a href="extension-patient-sexforclinicaluse.html">sexForClinicalUse</a> as a way to communicate a patient's current sex for clinical use.  Some jurisdictions may define a realm-specific extension for this property. It is also possible to use an observation, using the LOINC code <a href="http://loinc.org/76689-9">76689-9 (Sex assigned at birth)</a> or the <a href="extension-individual-recordedsexorgender.html">recordedSexOrGender</a> extension.
	</li>
	</ul>
	</li>	
</ul>
<p>
For veterinary use, the animal extension also includes the genderStatus which indicates sterility information.
</p>

<a name="maternity"></a>
<h2>Mother and newborn relationships</h2>
<p>
There are several ways to represent the relationship between a mother and a child.
This is due to the when it is recorded and the purpose for which it is recorded:
</p>
	<ul>
		<li>To express the family relationship and legal responsibility thereof for 
		administrative purposes: use the Patient/RelatedPerson structure.<br/>
		This structure is consistent over time.</li>
		<li>To relate the encounters of a mother and her baby in a maternity encounter,
		for administrative and billing purposes: use the <a href="encounter-definitions.html#Encounter.partOf">encounter.partof</a> property</li>
		<li>To collect information about the patient's relatives that might be relevant
		to the patient's medical condition: use the <a href="familymemberhistory.html">FamilyMemberHistory</a> resource</li>
	</ul>
<p>
During a maternity encounter, the Patient and Encounter resources for the mother will be present.
After the child is born, new Patient, Encounter and RelatedPerson (for the mother) records will be created.
The Child's encounter should reference the Mother's encounter using the partOf property.<br/>
The Patient/RelatedPerson structure should also be created for ongoing usage, as shown in this example:
</p>
<pre>
&lt;Patient&gt;
	&lt;id value="child"/&gt;
	&lt;!-- The details of the child --&gt;
&lt;/Patient&gt;
&lt;RelatedPerson&gt;
	&lt;id value="rp-mom"/&gt;
	&lt;patient&gt;
		&lt;reference value="Patient/child"/&gt;
	&lt;/patient&gt;
&lt;/RelatedPerson&gt;
&lt;Patient&gt;
	&lt;id value="pat-mom"/&gt;
	&lt;!-- The details of the mom --&gt;
	&lt;link&gt;
		&lt;other value="rp-mom"/&gt;
		&lt;type value="see-also"/&gt;
	&lt;/link&gt;
&lt;/Patient&gt;
&lt;Encounter&gt;
	&lt;id value="mom-enc"/&gt;
	&lt;status value="in-progress"/&gt;
	&lt;class value="inpatient"/&gt;
	&lt;patient&gt;
		&lt;reference value="Patient/mom"/&gt;
	&lt;/patient&gt;
&lt;/Encounter&gt;
&lt;Encounter&gt;
	&lt;id value="child-enc"/&gt;
	&lt;status value="in-progress"/&gt;
	&lt;class value="inpatient"/&gt;
	&lt;patient&gt;
		&lt;reference value="Patient/child"/&gt;
	&lt;/patient&gt;
	&lt;partOf&gt;
		&lt;reference value="Encounter/mom-enc"/&gt;
	&lt;/partOf&gt;
&lt;/Encounter&gt;
</pre>
	
<a name="merge"></a>
<h2>Merging records</h2>
<p>
This specification does not specify merge functionality: if multiple patient records are found to be 
duplicates, they can be linked together, as described above. These links merely express the relationship
between records, and in the case of a replacement link, indicate a "master" record.  This specification
does not mandate that FHIR servers migrate information between such records on finding such a link. Note:
</p>
<ul>
 <li>Health information administrators may call the process "merging", but it is often implemented as "linking" at the record level</li>
 <li>Servers are allowed to implement merging/record migration even though it is not mandated. </li>
</ul>
[%stu-note dstu%]
 We are seeking input from the implementer community on what effect linking/merging/unlinking should have on 
other functionality such as the GET operation, searching, reverse includes, etc.;<br/>
How should an unlink behavior be done?<br/>
How will the patient compartment interact with the merge?<br/>
This functionality and related behaviors is subject to ongoing experimentation and implementation testing, 
with a definition to be proposed in a future version of this specification.
</p>
<p>
Feedback <a href="http://hl7.org/fhir-issues">here</a>.
[%end-note%]

<a name="match"></a>
<h2>Patient Matching using an MPI</h2>
<p>
A Master Patient Index (<a href="http://en.wikipedia.org/wiki/Enterprise_master_patient_index">MPI</a>)
is a service used to manage patient identification in a context
where multiple patient databases exist. Healthcare applications and middleware use the 
MPI to match patients between the databases, and as new patient details are encountered.
MPIs are highly specialized applications, often tailored extensively to the institution's 
particular mix of patients. MPIs can also be run on a regional and national basis. 
</p>
<p>
To ask an MPI to match a patient, clients call the patient <a href="patient-operation-match.html">$match</a> operation,
which processes a parameters resource containing a complete or fragment of a patient resource, along with some other control parameters.<br/>
This provided patient resource does not need to pass full validation (mandatory fields, or invariants) as the resource will not be stored,
it does however need to be a parsable instance.<br/> 
The MPI can then use the properties of the resource as MPI inputs, and process them using an internal MPI algorithm of some kind to determine the most appropriate matches 
in the patient set. It does not have to use all the properties provided, and may ignore others provided quietly.<br/>
A specific profile (with the required fields/invariants) can be used to define what parameters the MPI algorithm requires.
</p>
<pre>
  POST [base]/Patient/$match
  [some headers including content-type xml or json]
  [parameters body with patient resource inside]
</pre>
<p>
The response from an MPI $match operation is a set of patient records, ordered from most
likely to least likely. If there are not patient matches, the MPI SHALL return 
an empty search set with no error, but may include an <a href="operationoutcome.html">operation outcome</a> with 
further advice. All patient records should have a score from 0 to 1, where
1 is the most certain match, along with an <a href="extensibility.html">extension</a>
<a href="extension-match-grade.html">"match-grade"</a> that indicates the MPI's position on the match quality:
</p>
<pre>
  &lt;entry&gt; 
    &lt;resource&gt;
      &lt;Patient&gt;
        &lt;!-- patient details --&gt;
      &lt;/Patient&gt;
    &lt;/resource&gt;
    &lt;search&gt;
      &lt;extension url=&quot;http://hl7.org/fhir/StructureDefinition/match-grade&quot;&gt;
        &lt;valueCode value=&quot;probable&quot;/&gt;
      &lt;/extension&gt;
      &lt;score value=&quot;0.80&quot;/&gt;
    &lt;/search&gt;
  &lt;/entry&gt; 
</pre>
<p>
The match-grade extension has one of the <a href="valueset-match-grade.html">following codes</a>:
</p>
[%codelist-nh http://terminology.hl7.org/CodeSystem/match-grade%]
<p>
  The purpose of using an MPI search versus a regular search is that the MPI search is really intended to target and 
  find a specific single patient for recording information about reducing errors through incorrectly selecting the
  wrong patient. Often MPIs won't return data if there is insufficient search parameter data, such as a partial surname.<br/>
  This compares to a regular search which can be used for finding lists of patients, such as to locate a group of patients
  that share a property in common, such as live in a specific location, or fit within an age range for performing population analysis.
</p>
<!--<p>
One optional parameter to the MPI match operation is "userid", which is
used to pass the user details from a trusted client to the MPI. This may 
be used by the MPI to restrict the possible matches that are returned, based 
on the user's rights. For example, a staff member covered by policies, etc.,
may well get a different result than a patient trying to find their own 
record. Note that this parameter is used where the user would not be 
expected to log in to the MPI directly; whether this is appropriate or not is 
a deployment choice.
</p>-->
<p>
A <a href="operation-patient-match.html">formal definition</a> for the MPI $match operation is published.
</p>

<a name="veterinary"></a>
<h2>Veterinary Care</h2>
<p>
Veterinary care is very much within the scope of FHIR, and the Patient resource can be used to communicate information about animal patients. To support this, there is a standard <a href="extension-patient-animal.html">patient-animal extension</a> which can be used for recording details about species, breed, and gender status. This extension is not intended to cover all relevant properties for veterinary care, and the use of additional domain-relevant extensions is expected for areas such as laboratory, zoological and livestock care.
</p>
<p>
The veterinary client ("owner") is represented using the RelatedPerson resource.
</p>

</div>

<mappingExceptions pattern="Request" resource="ServiceRequest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../tools/schema/mappingExceptions.xsd">
    <!--For information on the contents of this file and how to properly update it, see https://confluence.hl7.org/display/FHIR/Mapping+to+Patterns.-->
    <divergentElement patternPath="Request.identifier" resourcePath="ServiceRequest.identifier">
        <shortUnmatched reason="Unknown">
            <_pattern value="Business Identifier for service request"/>
            <resource value="Identifiers assigned to this order"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="Business identifiers assigned to this service request by the author and/or other systems.  These identifiers remain constant as the resource is updated and propagates from server to server."/>
            <resource value="Identifiers assigned to this order instance by the orderer and/or the receiver and/or order fulfiller."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="The identifier.type element is used to distinguish between the identifiers assigned by the requester/placer and the performer/filler.&#10;&#10;Note: This is a business identifier, not a resource identifier (see [discussion](resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number."/>
            <resource value="The identifier.type element is used to distinguish between the identifiers assigned by the orderer (known as the 'Placer' in HL7 V2) and the producer of the observations in response to the order (known as the 'Filler' in HL7 V2).  For further discussion and examples see the resource notes section below."/>
        </commentsUnmatched>
        <requirementsUnmatched reason="Unknown">
            <_pattern value="Allows identification of the service request as it is known by various participating systems and in a way that remains consistent across servers."/>
            <resource value=""/>
        </requirementsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.basedOn" resourcePath="ServiceRequest.basedOn">
        <missingTypes _pattern="Reference(Request)" reason="Unknown"/>
        <extraTypes _resource="Reference(CarePlan,DocumentReference,ServiceRequest,MedicationRequest,RequestOrchestration,NutritionOrder,DocumentReference)" reason="Unknown"/>
        <shortUnmatched reason="Unknown">
            <_pattern value="Fulfills plan, proposal or order"/>
            <resource value="What request fulfills"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="A higher-level request resource (i.e. a plan, proposal or order) that is fulfilled in whole or in part by this service request.  Authorization from the 'basedOn' request flows through to the referencing service request."/>
            <resource value="Plan/proposal/order fulfilled by this request."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="basedOn represents the 'authorization' chain for an action, not the 'reason for action'.  For example, an order might be placed on hold under the authorization for a surgery.  However the 'reason' for placing the hold is &quot;to avoid interaction with anesthesia medications&quot;&#10;."/>
            <resource value=""/>
        </commentsUnmatched>
        <requirementsUnmatched reason="Unknown">
            <_pattern value="Allows tracing of authorization for the request and tracking whether proposals/recommendations were acted upon."/>
            <resource value=""/>
        </requirementsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.replaces" resourcePath="ServiceRequest.replaces">
        <missingTypes _pattern="Reference(Request)" reason="Unknown"/>
        <extraTypes _resource="Reference(ServiceRequest,MedicationRequest,RequestOrchestration,CarePlan,DeviceRequest,CommunicationRequest,NutritionOrder,VisionPrescription,SupplyRequest)" reason="Unknown"/>
        <shortUnmatched reason="Unknown">
            <_pattern value="Request(s) replaced by this service request"/>
            <resource value="What request replaces"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="Completed or terminated request(s) whose function is taken by this new service request."/>
            <resource value="The request takes the place of the referenced completed or terminated request(s)."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="The replacement could be because the initial request was immediately rejected (due to an issue) or because the previous request was completed, but the need for the action described by the request remains ongoing."/>
            <resource value=""/>
        </commentsUnmatched>
        <requirementsUnmatched reason="Unknown">
            <_pattern value="Allows tracing the continuation of a therapy or administrative process instantiated through multiple requests."/>
            <resource value=""/>
        </requirementsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.groupIdentifier" resourcePath="ServiceRequest.requisition">
        <shortUnmatched reason="Unknown">
            <_pattern value="Composite request this is part of"/>
            <resource value="Composite Request ID"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="A shared identifier common to all requests that were authorized more or less simultaneously by a single author, representing the identifier of the requisition, prescription or similar form."/>
            <resource value="A shared identifier common to all service requests that were authorized more or less simultaneously by a single author, representing the composite or group identifier."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="Requests are linked either by a &quot;basedOn&quot; relationship (i.e. one request is fulfilling another) or by having a common requisition.  Requests that are part of the same requisition are generally treated independently from the perspective of changing their state or maintaining them after initial creation."/>
            <resource value="Requests are linked either by a &quot;basedOn&quot; relationship (i.e. one request is fulfilling another) or by having a common requisition. Requests that are part of the same requisition are generally treated independently from the perspective of changing their state or maintaining them after initial creation."/>
        </commentsUnmatched>
        <requirementsUnmatched reason="Unknown">
            <_pattern value="Some business processes need to know if multiple items were ordered as part of the same &quot;prescription&quot; or &quot;requisition&quot; for billing or other purposes."/>
            <resource value="Some business processes need to know if multiple items were ordered as part of the same &quot;requisition&quot; for billing or other purposes."/>
        </requirementsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.status" resourcePath="ServiceRequest.status">
        <shortUnmatched reason="Unknown">
            <_pattern value="draft | active | on-hold | revoked | completed | entered-in-error | unknown"/>
            <resource value="draft | active | on-hold | entered-in-error | ended | completed | revoked | unknown"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="The current state of the service request."/>
            <resource value="The status of the order."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="The status is generally fully in the control of the requester - they determine whether the order is draft or active and, after it has been activated, completed, cancelled or suspended. States relating to the activities of the performer are reflected on either the corresponding]](s) or using the]] resource.  A nominal state-transition diagram can be found in the] documentation  Unknown does not represent &quot;other&quot; - one of the defined statuses must apply.  Unknown is used when the authoring system is not sure what the current status is.  A status of 'active' when doNotPerform is true means that the request to not perform is currently in force.&#10;&#10;A status of completed for a &quot;doNotPerform&quot; request indicates that the period of non-performance is now satisfied and the request no longer holds."/>
            <resource value="The status is generally fully in the control of the requester - they determine whether the order is draft or active and, after it has been activated, competed, revoked or placed on-hold. States relating to the activities of the performer are reflected on either the corresponding event (see [Event Pattern](event.html) for general discussion) or using the [Task](task.html) resource."/>
        </commentsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.statusReason" resourcePath="ServiceRequest.statusReason">
        <definitionUnmatched reason="Unknown">
            <_pattern value="Captures the reason for the current state of the service request. Note that any change to the state requires the removal of any existing statusReasons, and, if appropriate, populating new statusReasons."/>
            <resource value="Provides reason why the service request status is what it is. The statusReason can be used to explain why a service request is suspended, cancelled, or on hold, including administrative and clinical reasons."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="This is generally only used for &quot;exception&quot; statuses such as &quot;suspended&quot; or &quot;cancelled&quot;.  The reason why the service request was created at all is captured in reasonCode, not here. ."/>
            <resource value="This is generally not present when the service request has a status of 'active' or 'completed'. There is potential overlap between ServiceRequest.reason (why the service is being requested) and ServiceRequest.statusReason (why the request is in its current status) early in the performance of the request when the reason for the service request might influence the initial status."/>
        </commentsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.intent" resourcePath="ServiceRequest.intent">
        <shortUnmatched reason="Unknown">
            <_pattern value="proposal | plan | order (immutable)"/>
            <resource value="proposal | solicit-offer | offer-response | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="Indicates the level of authority/intentionality associated with the service request and where the request fits into the workflow chain."/>
            <resource value="Whether the request is a proposal, plan, an original order or a reflex order."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="This element is expected to be immutable.  E.g. A &quot;proposal&quot; instance should never change to be a &quot;plan&quot; instance or &quot;order&quot; instance.  Instead, a new instance 'basedOn' the prior instance should be created with the new 'intent' value.&#10;&#10;One exception to this is that the granularity of Request.intent is allowed to change.  For example, a Request identified as an &quot;order&quot; might later be clarified to be a &quot;filler-order&quot;.  Or, in rarer cases (to meet recipient constraints), the reverse might also occur.&#10;&#10;When resources map to this element, they are free to define as many codes as necessary to cover their space and will map to &quot;proposal, plan or order&quot;.  Can have multiple codes that map to one of these.  E.g. &quot;original order&quot;, &quot;encoded order&quot;, &quot;reflex order&quot; would all map to &quot;order&quot;.  Expectation is that the set of codes is mutually exclusive or a strict all-encompassing hierarchy."/>
            <resource value="This element is expected to be immutable. E.g. A 'proposal' instance should never change to be a 'plan' instance or 'order' instance. Instead, a new instance 'basedOn' the prior instance should be created with the new 'intent' value.&#10;&#10;One exception to this is that the granularity of ServiceRequest.intent is allowed to change. For example, a ServiceRequest identified as an 'order' might later be clarified to be a 'filler-order'. Or, in rarer cases (to meet recipient constraints), the reverse might also occur."/>
        </commentsUnmatched>
        <requirementsUnmatched reason="Unknown">
            <_pattern value="Proposals/recommendations, plans and orders all use the same structure and can exist in the same fulfillment chain."/>
            <resource value=""/>
        </requirementsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.priority" resourcePath="ServiceRequest.priority">
        <definitionUnmatched reason="Unknown">
            <_pattern value="Indicates how quickly the service request should be addressed with respect to other requests."/>
            <resource value="Indicates how quickly the ServiceRequest should be addressed with respect to other requests."/>
        </definitionUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.doNotPerform" resourcePath="ServiceRequest.doNotPerform">
        <shortUnmatched reason="Unknown">
            <_pattern value="true if request is prohibiting action"/>
            <resource value="True if service/procedure should not be performed"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="If true indicates that the service request is asking for the specified action to *not* occur."/>
            <resource value="Set this to true if the record is saying that the service/procedure should NOT be performed."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="The attributes provided with the request qualify what is not to be done.  For example, if an effectiveTime is provided, the &quot;do not&quot; request only applies within the specified time.  If a performerType is specified then the &quot;do not&quot; request only applies to performers of that type.  Qualifiers include: code, subject, occurrence, performerType and performer.&#10;&#10;In some cases, the Request.code may pre-coordinate prohibition into the requested action.  E.g. &quot;NPO&quot; (nothing by mouth), &quot;DNR&quot; (do not recussitate).  If this happens, doNotPerform SHALL NOT be set to true.  I.e. The resource shall not have double negation. (E.g. &quot;Do not DNR&quot;)."/>
            <resource value="In general, only the code and timeframe will be present, though occasional additional qualifiers such as body site or even performer could be included to narrow the scope of the prohibition.  If the ServiceRequest.code and ServiceRequest.doNotPerform both contain negation, that will reinforce prohibition and should not have a double negative interpretation."/>
        </commentsUnmatched>
        <requirementsUnmatched reason="Unknown">
            <_pattern value="Supports things like Do Not Recussitate, Nothing by mouth, etc."/>
            <resource value="Used for do not ambulate, do not elevate head of bed, do not flush NG tube, do not take blood pressure on a certain arm, etc."/>
        </requirementsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.category" resourcePath="ServiceRequest.category">
        <bindingExistence _pattern="false" _resource="true" reason="Unknown"/>
        <shortUnmatched reason="Unknown">
            <_pattern value="Partitions the service request into one or more categories that can be used to filter searching, to govern access control and/or to guide system behavior."/>
            <resource value="Classification of service"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="Partitions the service request into one or more categories that can be used to filter searching, to govern access control and/or to guide system behavior."/>
            <resource value="A code that classifies the service for searching, sorting and display purposes (e.g. &quot;Surgical Procedure&quot;)."/>
        </definitionUnmatched>
        <requirementsUnmatched reason="Unknown">
            <_pattern value="Categorization might be done automatically (inferred by code) or manually by user assertion.  The absence of a category may limit the ability to determine when the element should be handled, so strong consideration should be given to how systems will be able to determine category values for legacy data and how data that cannot be categorized will be handled.  As well, some categories might not be mutually exclusive, so systems should prepare for multiple declared categories - even within a single category 'axis'.&#10;In general, there should not be a 'strong' binding ('required' or 'extensible') on the category element overall.  Instead, the element can be sliced and bindings can be asserted that apply to particular repetitions."/>
            <resource value="Used for filtering what service request are retrieved and displayed."/>
        </requirementsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.code" resourcePath="ServiceRequest.code">
        <missingTypes _pattern="CodeableConcept" reason="Unknown"/>
        <extraTypes _resource="CodeableReference(ActivityDefinition,PlanDefinition)" reason="Unknown"/>
        <shortUnmatched reason="Unknown">
            <_pattern value="Service requested/ordered"/>
            <resource value="What is being requested/ordered"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="A code that identifies the specific service or action being asked to be done (or not done)."/>
            <resource value="A code or reference that identifies a particular service (i.e., procedure, diagnostic investigation, or panel of investigations) that has been requested."/>
        </definitionUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.product" resourcePath="ServiceRequest.orderDetail.parameterFocus[x]">
        <missingTypes _pattern="CodeableReference(BiologicallyDerivedProduct,Device,DeviceDefinition,Medication,NutritionProduct,Substance)" reason="Unknown"/>
        <extraTypes _resource="Reference(Medication,MedicinalProductDefinition,SubstanceDefinition), canonical(DeviceDefinition,PlanDefinition), CodeableConcept" reason="Unknown"/>
        <summary _pattern="true" _resource="false" reason="Unknown"/>
        <shortUnmatched reason="Unknown">
            <_pattern value="Product requested/ordered"/>
            <resource value="The context of the order details by reference"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="Indicates the product whose supply or manipulation is authorized by this service request."/>
            <resource value="Indicates the context of the order details by reference."/>
        </definitionUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.subject" resourcePath="ServiceRequest.subject">
        <extraTypes _resource="Reference(Location,Device)" reason="Unknown"/>
        <shortUnmatched reason="Unknown">
            <_pattern value="Individual the service is ordered/prohibited for"/>
            <resource value="Individual or Entity the service is ordered for"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="The individual or set of individuals the action is to be performed/not performed on or for."/>
            <resource value="On whom or what the service is to be performed. This is usually a human patient, but can also be requested on animals, groups of humans or animals, devices such as dialysis machines, or even locations (typically for environmental scans)."/>
        </definitionUnmatched>
        <requirementsUnmatched reason="Unknown">
            <_pattern value="Links the request to the Patient context."/>
            <resource value=""/>
        </requirementsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.encounter" resourcePath="ServiceRequest.encounter">
        <shortUnmatched reason="Unknown">
            <_pattern value="Encounter the service request is tied to"/>
            <resource value="Encounter in which the request was created"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="The Encounter during which this service request was created or to which the creation of this record is tightly associated."/>
            <resource value="An encounter that provides additional information about the healthcare context in which this request is made."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="This will typically be the encounter during which the service request was created.  However, some {{title}s may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter (e.g. pre-admission activities)."/>
            <resource value=""/>
        </commentsUnmatched>
        <requirementsUnmatched reason="Unknown">
            <_pattern value="Links the service request to the Encounter context."/>
            <resource value=""/>
        </requirementsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.occurrence[x]" resourcePath="ServiceRequest.occurrence[x]">
        <shortUnmatched reason="Unknown">
            <_pattern value="When service should (not) occur"/>
            <resource value="When service should occur"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="The date or time(s) at which the activity or service is desired to occur or not occur."/>
            <resource value="The date/time at which the requested service should occur."/>
        </definitionUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.authoredOn" resourcePath="ServiceRequest.authoredOn">
        <shortUnmatched reason="Unknown">
            <_pattern value="When request was created/transitioned to active"/>
            <resource value="Date request signed"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="For draft service requests, indicates the date of initial creation.  For requests with other statuses, indicates the date of activation."/>
            <resource value="When the request transitioned to being actionable."/>
        </definitionUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.requester" resourcePath="ServiceRequest.requester">
        <extraTypes _resource="Reference(Group)" reason="Unknown"/>
        <definitionUnmatched reason="Unknown">
            <_pattern value="Who initiated the {{request}} and has responsibility for its activation."/>
            <resource value="The individual who initiated the request and has responsibility for its activation."/>
        </definitionUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.performerType" resourcePath="ServiceRequest.performerType">
        <shortUnmatched reason="Unknown">
            <_pattern value="Desired kind of service performer"/>
            <resource value="Performer role"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="The type of individual that is desired to act upon/ not act upon the {{request}}."/>
            <resource value="Desired type of performer for doing the requested service."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="If specified without indicating a performer, this indicates that the performer must be (or can't be) of the specified type.  If specified with a performer then it indicates the requirements of the performer if the designated performer is not available.  If doNotPerform is true, then only one of performerType and performer should be present."/>
            <resource value="This is a  role, not  a participation type.  In other words, does not describe the task but describes the capacity.  For example, “compounding pharmacy”, “psychiatrist” or “internal referral”."/>
        </commentsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.performer" resourcePath="ServiceRequest.performer">
        <upperCardinality _pattern="1" _resource="*" reason="Unknown"/>
        <extraTypes _resource="Reference(Group)" reason="Unknown"/>
        <shortUnmatched reason="Unknown">
            <_pattern value="Specific desired (non)performer"/>
            <resource value="Requested performer"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="Indicates who or what is being asked to perform (or not perform) the {{request}}."/>
            <resource value="The desired performer for doing the requested service.  For example, the surgeon, dermatopathologist, endoscopist, etc."/>
        </definitionUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.reason" resourcePath="ServiceRequest.reason">
        <shortUnmatched reason="Unknown">
            <_pattern value="Why is service (not) needed?"/>
            <resource value="Reason or indication for requesting the service"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="Describes why the request is being made in coded or textual form, or Indicates another resource whose existence justifies this request."/>
            <resource value="The reason or the indication for requesting the service (e.g., procedure, lab test)."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="Textual reasons can be captured using reasonCode.text.  If doNoPerform is true, this will be the reason why the request is being made to not act."/>
            <resource value="This element represents why the request is being made and may be used to decide how the service will be performed, or even if it will be performed at all. To be as specific as possible,  a reference to  *Observation* or *Condition* should be used if available.  Use `reason.concept.text` element if the data is free (uncoded) text as shown in the [CT Scan example](servicerequest-example-di.html)."/>
        </commentsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.insurance" resourcePath="ServiceRequest.insurance">
        <definitionUnmatched reason="Unknown">
            <_pattern value="Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be relevant in delivering the requested service."/>
            <resource value="Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be needed for delivering the requested service."/>
        </definitionUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.supportingInfo" resourcePath="ServiceRequest.supportingInfo">
        <missingTypes _pattern="Reference(Any)" reason="Unknown"/>
        <extraTypes _resource="CodeableReference(Resource)" reason="Unknown"/>
        <shortUnmatched reason="Unknown">
            <_pattern value="Extra information to use in performing request"/>
            <resource value="Additional clinical information"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="Information that may be needed by/relevant to the performer in their execution of this service request."/>
            <resource value="Additional clinical information about the patient or specimen that may influence the services or their interpretations. This information includes diagnosis, clinical findings and other observations. In laboratory ordering these are typically referred to as 'ask at order entry questions (AOEs).' This includes observations explicitly requested by the producer (filler) to provide context or supporting information needed to complete the order. For example, reporting the amount of inspired oxygen for blood gas measurements."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="See guidance on [notes vs. supportingInfo](request.html#notes)."/>
            <resource value="To represent information about how the services are to be delivered, use the orderDetail element."/>
        </commentsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.note" resourcePath="ServiceRequest.note">
        <shortUnmatched reason="Unknown">
            <_pattern value="Comments made about service request"/>
            <resource value="Comments"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="Comments made about the service request by the requester, performer, subject or other participants."/>
            <resource value="Any other notes and comments made about the service request. For example, internal billing notes."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="See guidance on [notes vs. supportingInfo](request.html#notes)."/>
            <resource value=""/>
        </commentsUnmatched>
    </divergentElement>
    <divergentElement patternPath="Request.relevantHistory" resourcePath="ServiceRequest.relevantHistory">
        <shortUnmatched reason="Unknown">
            <_pattern value="Key events in history of service request"/>
            <resource value="Request provenance"/>
        </shortUnmatched>
        <definitionUnmatched reason="Unknown">
            <_pattern value="Links to Provenance records for past versions of this resource or fulfilling request or event resources that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the resource."/>
            <resource value="Key events in the history of the request."/>
        </definitionUnmatched>
        <commentsUnmatched reason="Unknown">
            <_pattern value="This element does not point to the Provenance associated with the *current* version of the resource - as it would be created after this version existed.  The Provenance for the current version can be retrieved with a _revinclude.  Referenced provenances SHOULD adhere to the [provenance-relevant-history profile](provenance-relevant-history.html).&#10;&#10;See additional guidance [here](request.html#history)."/>
            <resource value="This might not include provenances for all versions of the request – only those deemed “relevant” or important.&#13;This SHALL NOT include the Provenance associated with this current version of the resource.  (If that provenance is deemed to be a “relevant” change, it will need to be added as part of a later update.  Until then, it can be queried directly as the Provenance that points to this version using _revinclude&#13;All Provenances should have some historical version of this Request as their subject."/>
        </commentsUnmatched>
    </divergentElement>
    <unmappedElement patternPath="Request.deliverTo" reason="Unknown"/>
    <unmappedElement patternPath="Request.reported" reason="Unknown"/>
</mappingExceptions>

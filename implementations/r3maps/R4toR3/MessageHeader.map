map "http://hl7.org/fhir/StructureMap/MessageHeader4to3" = "R4 to R3 Conversion for MessageHeader"

uses "http://hl7.org/fhir/StructureDefinition/MessageHeader" alias MessageHeader as source
uses "http://hl7.org/fhir/3.0/StructureDefinition/MessageHeader" alias MessageHeaderR3 as target

imports "http://hl7.org/fhir/StructureMap/*4to3"

group MessageHeader(source src : MessageHeader, target tgt : MessageHeaderR3) extends DomainResource <<type+>> {
  src.event -> tgt.event;
  src.destination as vs0 -> tgt.destination as vt0 then destination(vs0, vt0, tgt);
  src.sender -> tgt.sender;
  src.extension as ext where url = 'http://hl7.org/fhir/3.0/StructureDefinition/extension-MessageHeader.timestamp' then {
    ext.value -> tgt.timestamp "timestamp2";
  } "timestamp";
  src.enterer -> tgt.enterer;
  src.author -> tgt.author;
  src.source as vs0 -> tgt.source as vt0 then source(vs0, vt0);
  src.responsible -> tgt.responsible;
  src.reason -> tgt.reason;
  src.response as vs0 -> tgt.response as vt0 then response(vs0, vt0);
  src.focus -> tgt.focus;
}

group destination(source src, target tgt, target mtgt) extends BackboneElement {
  src.name -> tgt.name;
  src.target -> tgt.target;
  src.endpoint -> tgt.endpoint;
  src.receiver -> mtgt.receiver;
}

group source(source src, target tgt) extends BackboneElement {
  src.name -> tgt.name;
  src.software -> tgt.software;
  src.version -> tgt.version;
  src.contact -> tgt.contact;
  src.endpoint -> tgt.endpoint;
}

group response(source src, target tgt) extends BackboneElement {
  src.identifier -> tgt.identifier;
  src.code -> tgt.code;
  src.details -> tgt.details;
}


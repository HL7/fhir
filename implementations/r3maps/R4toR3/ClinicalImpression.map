map "http://hl7.org/fhir/StructureMap/ClinicalImpression4to3" = "R4 to R3 Conversion for ClinicalImpression"

conceptmap "ClinicalImpressionStatus" {
  prefix s = "http://hl7.org/fhir/event-status"
  prefix t = "http://hl7.org/fhir/clinical-impression-status"

  s:"'in-progress'" - t:draft
  s:completed - t:completed
  s:"'entered-in-error'" - t:"'entered-in-error'"
}

uses "http://hl7.org/fhir/StructureDefinition/ClinicalImpression" alias ClinicalImpression as source
uses "http://hl7.org/fhir/3.0/StructureDefinition/ClinicalImpression" alias ClinicalImpressionR3 as target

imports "http://hl7.org/fhir/StructureMap/*4to3"

group ClinicalImpression(source src : ClinicalImpression, target tgt : ClinicalImpressionR3) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier;
  src.status as v -> tgt.status = translate(v, '#ClinicalImpressionStatus', 'code');
  src.code -> tgt.code;
  src.description -> tgt.description;
  src.subject -> tgt.subject;
  src.encounter -> tgt.context;
  src.effective : dateTime as vs -> tgt.effective = create('dateTime') as vt then dateTime(vs, vt);
  src.effective : Period as vs -> tgt.effective = create('Period') as vt then Period(vs, vt);
  src.date -> tgt.date;
  src.assessor -> tgt.assessor;
  src.previous -> tgt.previous;
  src.problem -> tgt.problem;
  src.investigation as vs0 -> tgt.investigation as vt0 then investigation(vs0, vt0);
  src.protocol -> tgt.protocol;
  src.summary -> tgt.summary;
  src.finding as vs0 -> tgt.finding as vt0 then finding(vs0, vt0);
  src.prognosisCodeableConcept -> tgt.prognosisCodeableConcept;
  src.prognosisReference -> tgt.prognosisReference;
  src.extension as e where url = 'http://hl7.org/fhir/3.0/StructureDefinition/extension-ClinicalImpression.action' then {
    e.value -> tgt.action;
  };
  src.note -> tgt.note;
}

group investigation(source src, target tgt) extends BackboneElement {
  src.code -> tgt.code;
  src.item -> tgt.item;
}

group finding(source src, target tgt) extends BackboneElement {
  src.itemCodeableConcept as vs -> tgt.item = create('CodeableConcept') as vt then CodeableConcept(vs, vt);
  src.itemReference as vs -> tgt.item = create('Reference') as vt then Reference(vs, vt);
  src.basis -> tgt.basis;
}


map "http://hl7.org/fhir/StructureMap/CommunicationRequest4to3" = "R4 to R3 Conversion for CommunicationRequest"

uses "http://hl7.org/fhir/StructureDefinition/CommunicationRequest" alias CommunicationRequest as source
uses "http://hl7.org/fhir/3.0/StructureDefinition/CommunicationRequest" alias CommunicationRequestR3 as target

imports "http://hl7.org/fhir/StructureMap/*4to3"

group CommunicationRequest(source src : CommunicationRequest, target tgt : CommunicationRequestR3) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier;
  src.basedOn -> tgt.basedOn;
  src.replaces -> tgt.replaces;
  src.groupIdentifier -> tgt.groupIdentifier;
  src.status -> tgt.status;
  src.category -> tgt.category;
  src.priority -> tgt.priority;
  src.medium -> tgt.medium;
  src.subject -> tgt.subject;
  src.recipient -> tgt.recipient;
  src.about -> tgt.topic;
  src.encounter -> tgt.context;
  src.payload as s -> tgt.payload as t then payload(s, t);
  src.occurrence : dateTime as s -> tgt.occurrence = create('dateTime') as t then dateTime(s, t);
  src.occurrence : Period as s -> tgt.occurrence = create('Period') as t then Period(s, t);
  src.authoredOn -> tgt.authoredOn;
  src.sender -> tgt.sender;
  src where requester.exists() or extension.where(url = 'http://hl7.org/fhir/3.0/StructureDefinition/extension-CommunicationRequest.requester.onBehalfOf').exists() -> tgt.requester as vt0 then agent(src, vt0) "requester";
  src.reasonCode -> tgt.reasonCode;
  src.reasonReference -> tgt.reasonReference;
  src.note -> tgt.note;
}

group agent(source src, target tgt) {
  src.requester -> tgt.agent;
  src.extension as e where url = 'http://hl7.org/fhir/3.0/StructureDefinition/extension-CommunicationRequest.requester.onBehalfOf' then {
    e.value -> tgt.onBehalfOf;
  };
}

group payload(source src, target tgt) extends BackboneElement {
  src.content : string as s -> tgt.content = create('string') as t then string(s, t);
  src.content : Attachment as s -> tgt.content = create('Attachment') as t then Attachment(s, t);
  src.content : Reference as s -> tgt.content = create('Reference') as t then Reference(s, t);
}


map "http://hl7.org/fhir/StructureMap/Communication3to4" = "R3 to R4 Conversions for Communication"

uses "http://hl7.org/fhir/3.0/StructureDefinition/Communication" alias CommunicationR3 as source
uses "http://hl7.org/fhir/StructureDefinition/Communication" alias Communication as target

imports "http://hl7.org/fhir/StructureMap/*3to4"

group Communication(source src : CommunicationR3, target tgt : Communication) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier;
  src.definition -> tgt.instantiatesCanonical;
  src.basedOn -> tgt.basedOn;
  src.partOf -> tgt.partOf;
  src.status where src.notDone.not() -> tgt.status;
  src.notDone where src.notDone -> tgt.status = 'not-done';
  src.notDoneReason -> tgt.statusReason;
  src.category -> tgt.category;
  src.medium -> tgt.medium;
  src.subject -> tgt.subject;
  src.recipient -> tgt.recipient;
  src.topic as v ->  tgt.extension as vt,  vt.url = 'http://hl7.org/fhir/3.0/StructureDefinition/extension-Communication.topic',  vt.value = v;
  src.context -> tgt.encounter;
  src.sent -> tgt.sent;
  src.received -> tgt.received;
  src.sender -> tgt.sender;
  src.reasonCode -> tgt.reasonCode;
  src.reasonReference -> tgt.reasonReference;
  src.payload as s -> tgt.payload as t then payload(s, t);
  src.note -> tgt.note;
}

group payload(source src, target tgt) extends BackboneElement {
  src.content : string as s -> tgt.content = create('string') as t then string(s, t);
  src.content : Attachment as s -> tgt.content = create('Attachment') as t then Attachment(s, t);
  src.content : Reference as s -> tgt.content = create('Reference') as t then Reference(s, t);
}


map "http://hl7.org/fhir/StructureMap/EligibilityResponse3to4" = "R3 to R4 Conversions for (Coverage)EligibilityResponse"

uses "http://hl7.org/fhir/3.0/StructureDefinition/EligibilityResponse" alias EligibilityResponseR3 as source
uses "http://hl7.org/fhir/StructureDefinition/CoverageEligibilityResponse" alias EligibilityResponse as target

imports "http://hl7.org/fhir/StructureMap/*3to4"

group EligibilityResponse(source src : EligibilityResponseR3, target tgt : CoverageEligibilityResponse) extends DomainResource <<type+>> {
  src.identifier -> tgt.identifier;
  src.status -> tgt.status;
  src.patient -> tgt.patient;
  src.serviced -> tgt.serviced;
  src.created -> tgt.created;
  src.requestProvider -> tgt.requestor;
  src.request -> tgt.request;
  src.outcome as vs then {
    vs.coding as c where code in ('complete' | 'error' | 'partial') then {
      c.code -> tgt.outcome;
    };
  };
  src.disposition -> tgt.disposition;
  src.insurer -> tgt.insurer;
  src.insurance as s -> tgt.insurance as t then EligibilityResponseInsurance(s, t);
  src.preAuthRef -> tgt.preAuthRef;
  src.form -> tgt.form;
  src.error as s -> tgt.error as t then EligibilityResponseError(s, t);
}

group EligibilityResponseInsurance(source src, target tgt) extends BackboneElement {
  src.coverage -> tgt.coverage;
  src.contract -> tgt.contract;
  src where (src.inforce = true) -> tgt.inforce = true "inforce";
  src.detail as s -> tgt.detail as t then EligibilityResponseInsuranceDetail(s, t);
}

group EligibilityResponseInsuranceDetail(source src, target tgt) extends BackboneElement {
  src.category -> tgt.category;
  src.service -> tgt.service;
  src.modifier -> tgt.modifier;
  src.provider -> tgt.provider;
  src.excluded -> tgt.excluded;
  src.name -> tgt.name;
  src.description -> tgt.description;
  src.network -> tgt.network;
  src.unit -> tgt.unit;
  src.term -> tgt.term;
  src.benefit as s -> tgt.benefit as t then EligibilityResponseInsuranceDetailBenefit(s, t);
  src.authorizationRequired -> tgt.authorizationRequired;
  src.authorizationSupporting -> tgt.authorizationSupporting;
  src.authorizationUrl -> tgt.authorizationUrl;
}

group EligibilityResponseError(source src, target tgt) extends BackboneElement {
  src.code -> tgt.code;
}


map "http://hl7.org/fhir/StructureMap/Measure3to4" = "R3 to R4 Conversions for Measure"

uses "http://hl7.org/fhir/3.0/StructureDefinition/Measure" alias MeasureR3 as source
uses "http://hl7.org/fhir/StructureDefinition/Measure" alias Measure as target

imports "http://hl7.org/fhir/StructureMap/*3to4"

group Measure(source src : MeasureR3, target tgt : Measure) extends DomainResource <<type+>> {
  src.url -> tgt.url;
  src.identifier -> tgt.identifier;
  src.version -> tgt.version;
  src.name -> tgt.name;
  src.title -> tgt.title;
  src.status -> tgt.status;
  src.experimental -> tgt.experimental;
  src.date -> tgt.date;
  src.publisher -> tgt.publisher;
  src.contact -> tgt.contact;
  src.description -> tgt.description;
  src.useContext -> tgt.useContext;
  src.jurisdiction -> tgt.jurisdiction;
  src.purpose -> tgt.purpose;
  src.usage -> tgt.usage;
  src.copyright -> tgt.copyright;
  src.approvalDate -> tgt.approvalDate;
  src.lastReviewDate -> tgt.lastReviewDate;
  src.effectivePeriod -> tgt.effectivePeriod;
  src.topic -> tgt.topic;
  src.contributor as vs where type = 'author' -> tgt.author as vt then Contributor(vs, vt);
  src.contributor as vs where type = 'editor' -> tgt.editor as vt then Contributor(vs, vt);
  src.contributor as vs where type = 'reviewer' -> tgt.reviewer as vt then Contributor(vs, vt);
  src.contributor as vs where type = 'endorser' -> tgt.endorser as vt then Contributor(vs, vt);
  src.relatedArtifact -> tgt.relatedArtifact;
  src.library -> tgt.library;
  src.disclaimer -> tgt.disclaimer;
  src.scoring -> tgt.scoring;
  src.compositeScoring -> tgt.compositeScoring;
  src.type -> tgt.type;
  src.riskAdjustment -> tgt.riskAdjustment;
  src.rateAggregation -> tgt.rateAggregation;
  src.rationale -> tgt.rationale;
  src.clinicalRecommendationStatement -> tgt.clinicalRecommendationStatement;
  src.improvementNotation as s ->  tgt.improvementNotation as cc,  cc.text = s;
  src.definition -> tgt.definition;
  src.guidance -> tgt.guidance;
  src.set as v ->  tgt.extension as vt,  vt.url = 'http://hl7.org/fhir/3.0/StructureDefinition/extension-Measure.set',  vt.value = v;
  src.group as s -> tgt.group as t then group(s, t);
  src.supplementalData as s -> tgt.supplementalData as t then supplementalData(s, t);
}

group group(source src, target tgt) extends BackboneElement {
  src.identifier as vs -> tgt.code as vt then Identifier2Codeable(vs, vt);
  src.name as v ->  tgt.extension as vt,  vt.url = 'http://hl7.org/fhir/3.0/StructureDefinition/extension-Measure.group.name',  vt.value = v;
  src.description -> tgt.description;
  src.population as s -> tgt.population as t then population(s, t);
  src.stratifier as s -> tgt.stratifier as t then stratifier(s, t);
}

group population(source src, target tgt) extends BackboneElement {
  src.identifier as v ->  tgt.extension as vt,  vt.url = 'http://hl7.org/fhir/3.0/StructureDefinition/extension-Measure.group.population.identifier',  vt.value = v;
  src.code -> tgt.code;
  src.name as v ->  tgt.extension as vt,  vt.url = 'http://hl7.org/fhir/3.0/StructureDefinition/extension-Measure.group.population.name',  vt.value = v;
  src.description -> tgt.description;
  src.criteria as s ->  tgt.criteria as t,  t.expression = s;
}

group stratifier(source src, target tgt) extends BackboneElement {
  src.identifier as vs -> tgt.code as vt then Identifier2Codeable(vs, vt);
  src.criteria as s ->  tgt.criteria as t,  t.expression = s;
  src.path as v ->  tgt.extension as vt,  vt.url = 'http://hl7.org/fhir/3.0/StructureDefinition/extension-Measure.group.stratifier.path',  vt.value = v;
}

group supplementalData(source src, target tgt) extends BackboneElement {
  src.identifier as vs -> tgt.code as vt then Identifier2Codeable(vs, vt);
  src.usage -> tgt.usage;
  src.description -> tgt.description;
  src.criteria as s ->  tgt.criteria as t,  t.expression = s;
  src.path as v ->  tgt.extension as vt,  vt.url = 'http://hl7.org/fhir/3.0/StructureDefinition/extension-Measure.supplementalData.path',  vt.value = v;
}

